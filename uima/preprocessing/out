16:35:46.402 [main] [31mWARN [0;39m d.j.j.p.b.b.main.JCoReUIMAPipeline - Could not set descriptor files from the descAll/ directory to the serialized meta descriptions. Changes in the descriptors that have not been stored in the meta descriptions won't be available.
java.lang.IllegalStateException: Duplicate key JCoRe Annotation Adder (attempted merging values org.apache.uima.analysis_engine.impl.AnalysisEngineDescription_impl: 
annotatorImplementationName = de.julielab.jcore.ae.annotationadder.AnnotationAdderAnnotator
externalResourceDependencies = Array{0: org.apache.uima.resource.impl.ExternalResourceDependency_impl: 
description = A provider of annotations to add to the CAS. Must implement the de.julielab.jcore.ae.annotationadder.annotationsources.AnnotationProvider interface.
interfaceName = de.julielab.jcore.ae.annotationadder.annotationsources.AnnotationProvider
key = AnnotationSource
optional = false

}

flowControllerDeclaration = NULL
frameworkImplementation = org.apache.uima.java
implementationName = de.julielab.jcore.ae.annotationadder.AnnotationAdderAnnotator
metaData = org.apache.uima.analysis_engine.metadata.impl.AnalysisEngineMetaData_impl: 
UUID = NULL
asynchronousModeSupported = false
capabilities = Array{}

configurationParameterDeclarations = org.apache.uima.resource.metadata.impl.ConfigurationParameterDeclarations_impl: 
commonParameters = Array{}

configurationGroups = Array{}

configurationParameters = Array{0: org.apache.uima.resource.metadata.impl.ConfigurationParameter_impl: 
description = Determines the interpretation of annotation offsets. Possible values: "CHARACTER" and "TOKEN". For the TOKEN offset mode, the correct tokenization must be given in the CAS. TOKEN offsets start with 1, CHARACTER offsets are 0-based. Defaults to CHARACTER.
externalOverrideName = NULL
mandatory = false
multiValued = false
name = OffsetMode
overrides = Array{}

type = String

1: org.apache.uima.resource.metadata.impl.ConfigurationParameter_impl: 
description = Most external annotation formats require that the qualified name a UIMA type is provided which reflects the annotation to be created for the respective annotation. With this parameter, a default type can be provided which will be forwarded to the format parser. If the parser supports it, the type can then be omitted from the external annotation source.
externalOverrideName = NULL
mandatory = false
multiValued = false
name = DefaultUimaType
overrides = Array{}

type = String

2: org.apache.uima.resource.metadata.impl.ConfigurationParameter_impl: 
description = This setting is only in effect if an input format is used that contains document text SHA256 digests while also writing the annotation results into a JeDIS database. If then a CAS document text, to which annotations should be added, does not match the digest given by an annotation, this CAS will not marked as being finished processing by DBCheckpointAE that may follow in the pipeline. The idea is that the mismatched documents require a reprocessing of the original annotation creation algorithm because their text has been changed relative to the annotation on file. By not setting the document as being finished processed, it is straightforward to process only those documents again that failed to add one or multiple annotations.
externalOverrideName = NULL
mandatory = false
multiValued = false
name = PreventProcessedMarkOnDigestMismatch
overrides = Array{}

type = Boolean

}

defaultGroupName = NULL
searchStrategy = NULL

configurationParameterSettings = org.apache.uima.resource.metadata.impl.ConfigurationParameterSettings_impl: 
parameterSettings = Array{0: org.apache.uima.resource.metadata.impl.NameValuePair_impl: 
name = OffsetMode
value = CHARACTER

1: org.apache.uima.resource.metadata.impl.NameValuePair_impl: 
name = DefaultUimaType
value = de.julielab.jcore.types.Gene

}

settingsForGroups = {}

copyright = NULL
description = This component helps to import annotations made on the exact CAS document text by an external process back into the CAS. To this end, the component is prepared to read several data formats. Currently, simple offset-based annotations are supported with configurable UIMA types. The component supports character and token based offsets.
flowConstraints = NULL
fsIndexCollection = org.apache.uima.resource.metadata.impl.FsIndexCollection_impl: 
description = NULL
fsIndexes = Array{}

imports = Array{}

name = NULL
vendor = NULL
version = NULL

fsIndexes = Array{}

name = JCoRe Annotation Adder
operationalProperties = org.apache.uima.resource.metadata.impl.OperationalProperties_impl: 
modifiesCas = true
multipleDeploymentAllowed = true
outputsNewCASes = false

typePriorities = NULL
typeSystem = org.apache.uima.resource.metadata.impl.TypeSystemDescription_impl: 
description = NULL
imports = Array{}

name = NULL
types = Array{0: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = The super-type for the document annotation types (Header, Descriptor)
features = Array{}

name = de.julielab.jcore.types.DocumentAnnotation
supertypeName = de.julielab.jcore.types.Annotation

1: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = The Header type stores the bibliographical document information.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The type of the document (e.g. abstract, fulltext, randomized).
elementType = NULL
multipleReferencesAllowed = NULL
name = docType
rangeTypeName = de.julielab.jcore.types.DocType

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The source of the document (e.g. WWW, database, etc).
elementType = NULL
multipleReferencesAllowed = NULL
name = source
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The identifier of the document with respect to its source. E.g.: PMID in PubMed. In combination with the source, this is a unique identifier for a document.
elementType = NULL
multipleReferencesAllowed = NULL
name = docId
rangeTypeName = uima.cas.String

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Copyright information.
elementType = NULL
multipleReferencesAllowed = NULL
name = copyright
rangeTypeName = uima.cas.String

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Indicates whether the document is truncated.
elementType = NULL
multipleReferencesAllowed = NULL
name = truncated
rangeTypeName = uima.cas.Boolean

5: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The authors of the document.
elementType = de.julielab.jcore.types.AuthorInfo
multipleReferencesAllowed = true
name = authors
rangeTypeName = uima.cas.FSArray

6: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The title of the document.
elementType = NULL
multipleReferencesAllowed = NULL
name = title
rangeTypeName = uima.cas.String

7: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The list of the publication types.
elementType = de.julielab.jcore.types.PubType
multipleReferencesAllowed = NULL
name = pubTypeList
rangeTypeName = uima.cas.FSArray

8: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The language of the document.
elementType = NULL
multipleReferencesAllowed = NULL
name = language
rangeTypeName = de.julielab.jcore.types.Language

9: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = document object identifier
elementType = NULL
multipleReferencesAllowed = NULL
name = doi
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.Header
supertypeName = de.julielab.jcore.types.DocumentAnnotation

2: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = An abstract type which should be used to store information on the publication. See subtypes Journal and an accumulative type (OtherPub)
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The name of the publication type (e.g. journal, technical report, book).
elementType = NULL
multipleReferencesAllowed = NULL
name = name
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The date on which the document was published.
elementType = NULL
multipleReferencesAllowed = NULL
name = pubDate
rangeTypeName = de.julielab.jcore.types.Date

}

name = de.julielab.jcore.types.PubType
supertypeName = de.julielab.jcore.types.Annotation

3: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = This type contains attributes to describe a journal publication.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The international standard serial number.
elementType = NULL
multipleReferencesAllowed = NULL
name = ISSN
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The volume number of the journal in which the article was published.
elementType = NULL
multipleReferencesAllowed = NULL
name = volume
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Full journal title.
elementType = NULL
multipleReferencesAllowed = NULL
name = title
rangeTypeName = uima.cas.String

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The impact factor of the journal at the time of publication.
elementType = NULL
multipleReferencesAllowed = NULL
name = impactFactor
rangeTypeName = uima.cas.String

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the short title of the Journal (e.g. "Nicotine Tob Res" for "Nicotine & tobacco research : official journal of the Society for Research on Nicotine and Tobacco")
elementType = NULL
multipleReferencesAllowed = NULL
name = shortTitle
rangeTypeName = uima.cas.String

5: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Issue of Journal
elementType = NULL
multipleReferencesAllowed = NULL
name = issue
rangeTypeName = uima.cas.String

6: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Pages of Journal
elementType = NULL
multipleReferencesAllowed = NULL
name = pages
rangeTypeName = uima.cas.String

7: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the nlm id of the journal
elementType = NULL
multipleReferencesAllowed = NULL
name = nlmId
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.Journal
supertypeName = de.julielab.jcore.types.PubType

4: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Type to store dates
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = day of the month.
elementType = NULL
multipleReferencesAllowed = NULL
name = day
rangeTypeName = uima.cas.Integer

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = month of the year.
elementType = NULL
multipleReferencesAllowed = NULL
name = month
rangeTypeName = uima.cas.Integer

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = full year (e.g. 2006 and NOT 06).
elementType = NULL
multipleReferencesAllowed = NULL
name = year
rangeTypeName = uima.cas.Integer

}

name = de.julielab.jcore.types.Date
supertypeName = de.julielab.jcore.types.Annotation

5: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Accumulative type for all other types of publications
features = Array{}

name = de.julielab.jcore.types.OtherPub
supertypeName = de.julielab.jcore.types.PubType

6: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = An abstract type for the document descriptors, there are two subclasses: one for automatically acquired meta information and one for meta information that was added manually (such as e.g. MeSH term lists)
features = Array{}

name = de.julielab.jcore.types.Descriptor
supertypeName = de.julielab.jcore.types.Annotation

7: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = The descriptor type for automatically (i.e. algorithmically) acquired meta information. It can be refined and extended.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Here the document classification result will be stored, for example for storing infos if the document is age-related or not.
elementType = de.julielab.jcore.types.DocumentClass
multipleReferencesAllowed = NULL
name = documentClasses
rangeTypeName = uima.cas.FSArray

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = A list of document topics derived from a topic model.
elementType = de.julielab.jcore.types.DocumentTopics
multipleReferencesAllowed = NULL
name = documentTopics
rangeTypeName = uima.cas.FSArray

}

name = de.julielab.jcore.types.AutoDescriptor
supertypeName = de.julielab.jcore.types.Descriptor

8: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = The descriptor type for the manually added information.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = meta information about thos document, for example who is the annotator and which semantic types are annotated in this document
elementType = NULL
multipleReferencesAllowed = NULL
name = metaInfo
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.ManualDescriptor
supertypeName = de.julielab.jcore.types.Descriptor

9: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Medical Subject Headings, see NLM's MeSH for a detailed description.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = see MeSH
elementType = NULL
multipleReferencesAllowed = NULL
name = descriptorName
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = see MeSH
elementType = NULL
multipleReferencesAllowed = NULL
name = qualifierName
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = see MeSH
elementType = NULL
multipleReferencesAllowed = NULL
name = descriptorNameMajorTopic
rangeTypeName = uima.cas.Boolean

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = see MeSH
elementType = NULL
multipleReferencesAllowed = NULL
name = qualifierNameMajorTopic
rangeTypeName = uima.cas.Boolean

}

name = de.julielab.jcore.types.MeshHeading
supertypeName = de.julielab.jcore.types.Annotation

10: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = A chemical type
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = A unique 5 to 9 digit number in hyphenated format assigned by the Chemical Abstract Service to specify chemical substances, a zero is a valid number when an actual number cannot be located or is not yet available..
elementType = NULL
multipleReferencesAllowed = NULL
name = registryNumber
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The name of the substance that the registry number or the E.C. number identifies.
elementType = NULL
multipleReferencesAllowed = NULL
name = nameOfSubstance
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.Chemical
supertypeName = de.julielab.jcore.types.Annotation

11: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = References to other databases, e.g. SwissProt, INTERPRO e.g.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The name of the DB referred to
elementType = NULL
multipleReferencesAllowed = NULL
name = name
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = A list of accession numbers for this DB.
elementType = NULL
multipleReferencesAllowed = NULL
name = acList
rangeTypeName = uima.cas.StringArray

}

name = de.julielab.jcore.types.DBInfo
supertypeName = de.julielab.jcore.types.Annotation

12: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = A term of a controlled keyword list to describe the content of the publication.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The name of the keyword.
elementType = NULL
multipleReferencesAllowed = NULL
name = name
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The keyword source (terminology).
elementType = NULL
multipleReferencesAllowed = NULL
name = source
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.Keyword
supertypeName = de.julielab.jcore.types.Annotation

13: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = abstract
string = abstract

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = fulltext
string = fulltext

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = randomized
string = randomized

3: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = used for Wikipedia articles
string = article

4: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = used for Wikipedia disambiguation-pages
string = disambiguation-page

}

description = The document type
features = Array{}

name = de.julielab.jcore.types.DocType
supertypeName = uima.cas.String

14: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = German
string = de

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = English
string = en

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = Espagnol
string = es

3: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = French
string = fr

4: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = Italian
string = it

5: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = Portuguese
string = pt

6: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = Other languages
string = other

7: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = English
string = eng

8: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = German
string = ger

9: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = Französisch
string = fre

10: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = Italienisch
string = ita

}

description = The language of the document. Possible values: based on ISO-639-1 language codes; we start with a first selection (which might be extended later).
features = Array{}

name = de.julielab.jcore.types.Language
supertypeName = uima.cas.String

15: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = A document class specification for the CAS' document text.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The name of the document class this CAS has been classified to.
elementType = NULL
multipleReferencesAllowed = NULL
name = classname
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Confidence value of the classification into this class.
elementType = NULL
multipleReferencesAllowed = NULL
name = confidence
rangeTypeName = uima.cas.Double

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = An ID of the system that did assign this document class.
elementType = NULL
multipleReferencesAllowed = NULL
name = componentId
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.DocumentClass
supertypeName = uima.tcas.Annotation

16: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = AuthorInfo Type annotates the text segments containing the information about an author and his/her affiliation information.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = An author's forename,C
elementType = NULL
multipleReferencesAllowed = NULL
name = foreName
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Affiliation of the author.
elementType = NULL
multipleReferencesAllowed = NULL
name = affiliation
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Contact information (emails, phones, etc.).
elementType = NULL
multipleReferencesAllowed = NULL
name = contact
rangeTypeName = uima.cas.String

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The last name of the author.
elementType = NULL
multipleReferencesAllowed = NULL
name = lastName
rangeTypeName = uima.cas.String

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Initials
elementType = NULL
multipleReferencesAllowed = NULL
name = initials
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.AuthorInfo
supertypeName = de.julielab.jcore.types.Annotation

17: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = relatedArticle
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.RelatedArticle
supertypeName = de.julielab.jcore.types.Annotation

18: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = de.julielab.jcore.types.RelatedArticle
multipleReferencesAllowed = true
name = relatedArticles
rangeTypeName = uima.cas.FSArray

}

name = de.julielab.jcore.types.RelatedArticleList
supertypeName = de.julielab.jcore.types.Annotation

19: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = url
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = iconUrl
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.FullTextLink
supertypeName = de.julielab.jcore.types.Annotation

20: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = de.julielab.jcore.types.FullTextLink
multipleReferencesAllowed = true
name = fullTextLinks
rangeTypeName = uima.cas.FSArray

}

name = de.julielab.jcore.types.FullTextLinkList
supertypeName = de.julielab.jcore.types.Annotation

21: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Topics label documents with vectors weights for their semantically most prominent words
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Vector of weights denoting the semantical descriptivity of one word for the respective topic
elementType = NULL
multipleReferencesAllowed = NULL
name = Weights
rangeTypeName = uima.cas.DoubleArray

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = IDs for topics determined by the modeling implementation
elementType = NULL
multipleReferencesAllowed = NULL
name = IDs
rangeTypeName = uima.cas.IntegerArray

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = ID identifying the model holding the topics to be labeled
elementType = NULL
multipleReferencesAllowed = NULL
name = ModelID
rangeTypeName = uima.cas.String

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The top words for the respective topic
elementType = NULL
multipleReferencesAllowed = NULL
name = TopicWords
rangeTypeName = uima.cas.StringArray

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Version of the model holding the topics
elementType = NULL
multipleReferencesAllowed = NULL
name = ModelVersion
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.DocumentTopics
supertypeName = de.julielab.jcore.types.DocumentAnnotation

22: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = The super-type for all types.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The component that made the annotation may put its confidence/score calculated internally here, O
elementType = NULL
multipleReferencesAllowed = NULL
name = confidence
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Indicates which NLP component has been used to derive the annotation, C
elementType = NULL
multipleReferencesAllowed = NULL
name = componentId
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = id
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.Annotation
supertypeName = uima.tcas.Annotation

23: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Chains annotations of the same type
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Annotations to be chained.
elementType = de.julielab.jcore.types.Annotation
multipleReferencesAllowed = NULL
name = value
rangeTypeName = uima.cas.FSArray

}

name = de.julielab.jcore.types.DiscontinuousAnnotation
supertypeName = de.julielab.jcore.types.Annotation

24: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = The reference to an external resource
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The name of the resource, C
elementType = NULL
multipleReferencesAllowed = NULL
name = source
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The identifier of the entry, C
elementType = NULL
multipleReferencesAllowed = NULL
name = entryId
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The version of the resource, C
elementType = NULL
multipleReferencesAllowed = NULL
name = version
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.ResourceEntry
supertypeName = de.julielab.jcore.types.Annotation

25: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Token annotation marks the span of a token and takes all additional annotations that are on the token level, including Part-of-Speech information, lemma, stemmed form,  grammatical features such as gender, number and orthographical information; furthemore, Token includes the information about dependency relations to other tokens (see correspondent annotation types for further infromation).
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the lemma information, O
elementType = NULL
multipleReferencesAllowed = NULL
name = lemma
rangeTypeName = de.julielab.jcore.types.Lemma

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = List contains part-of-speech tags of different part-of-speech tagsets (see also POSTag and subtypes), O
elementType = de.julielab.jcore.types.POSTag
multipleReferencesAllowed = true
name = posTag
rangeTypeName = uima.cas.FSArray

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Contains the stemmed form of token (see StemmedForm), O
elementType = NULL
multipleReferencesAllowed = NULL
name = stemmedForm
rangeTypeName = de.julielab.jcore.types.StemmedForm

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Contains grammatical features correspondent to the part-of-speech tag of current token (see GrammaticalFeats and subtypes), O
elementType = NULL
multipleReferencesAllowed = NULL
name = feats
rangeTypeName = de.julielab.jcore.types.GrammaticalFeats

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = see de.julielab.jcore.types.Orthogrpahy
elementType = NULL
multipleReferencesAllowed = NULL
name = orthogr
rangeTypeName = de.julielab.jcore.types.Orthography

5: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Contains a list of syntactical dependencies, see DependencyRelation, O
elementType = de.julielab.jcore.types.DependencyRelation
multipleReferencesAllowed = true
name = depRel
rangeTypeName = uima.cas.FSArray

6: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = synonyms
rangeTypeName = uima.cas.StringArray

7: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = hypernyms
rangeTypeName = uima.cas.StringArray

8: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = An array of embedding vectors for this token.
elementType = de.julielab.jcore.types.EmbeddingVector
multipleReferencesAllowed = true
name = embeddingVectors
rangeTypeName = uima.cas.FSArray

}

name = de.julielab.jcore.types.Token
supertypeName = de.julielab.jcore.types.Annotation

26: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The source of the embedding, i.e. some identifier of the method that produces the embedding.
elementType = NULL
multipleReferencesAllowed = NULL
name = source
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The actual embedding vector.
elementType = NULL
multipleReferencesAllowed = NULL
name = vector
rangeTypeName = uima.cas.DoubleArray

}

name = de.julielab.jcore.types.EmbeddingVector
supertypeName = de.julielab.jcore.types.Annotation

27: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = POS is a linguistic category of words (tokens) that are defined by their particular syntactic/morphological behaviours (e.g. noun, verb).
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Every POS tagset (see subtypes) has an identifier, C
elementType = NULL
multipleReferencesAllowed = NULL
name = tagsetId
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The value of POS (NN, JJ etc.)
elementType = NULL
multipleReferencesAllowed = NULL
name = value
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.POSTag
supertypeName = de.julielab.jcore.types.Annotation

28: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = The Penn Treebank Tag Set* in Mitchell P. Marcus, Beatrice Santorini, and Mary Ann Marcinkiewicz: Building a Large Annotated Corpus of English: The Penn Treebank, in Computational Linguistics, Volume 19, Number 2 (June 1993), pp. 313--330 (Special Issue on Using Large Corpora). TagsetId 0
features = Array{}

name = de.julielab.jcore.types.PennPOSTag
supertypeName = de.julielab.jcore.types.POSTag

29: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Genia Tag Set in Tateisi, Yuka and Jun'ichi Tsujii. (2004). Part-of-Speech Annotation of Biology Research Abstracts. In the Proceedings of 4th International Conference on Language Resource and Evaluation (LREC2004). IV. pp. 1267-1270. TagsetId 1
features = Array{}

name = de.julielab.jcore.types.GeniaPOSTag
supertypeName = de.julielab.jcore.types.POSTag

30: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Mark A. Mandel. Integrated Annotation of Biomedical Text: Creating the PennBioIE Corpus. March 2006. Text Mining, Ontologies and Natural Language Processing in Biomedicine.
features = Array{}

name = de.julielab.jcore.types.PennBioIEPOSTag
supertypeName = de.julielab.jcore.types.POSTag

31: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = For general language German texts, cf. Anne Schiller, Simone Teufel, Christine Stöckert, and Christine Thielen. Guidelines für das Tagging deutscher Textcorpora mit STTS (Kleines und großes Tagset). Inst. für masch. Sprachverarbeitung, U. Stuttgart; Seminar für Sprachwissenschaft, U. Tübingen, 1999.
features = Array{}

name = de.julielab.jcore.types.STTSPOSTag
supertypeName = de.julielab.jcore.types.POSTag

32: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = For German biomedical texts, cf. Joachim Wermter and Udo Hahn. An annotated German-language medical text corpus as language resource. In LREC 2004—Proceedings of the 4th International Conference on Language Resources and Evaluation, volume 2, pages 473–476, 2004.
features = Array{}

name = de.julielab.jcore.types.STTSMedPOSTag
supertypeName = de.julielab.jcore.types.POSTag

33: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Lemma is the canonical form of a lexeme. Lemma can be retrieved from lexicon or be produced by lemmatizer.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The value of lemma,C
elementType = NULL
multipleReferencesAllowed = NULL
name = value
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.Lemma
supertypeName = de.julielab.jcore.types.Annotation

34: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Represents a grammatical morpheme, identifies the morpheme's base form for the current token, activat- for activation. Different forms can be produced by stemmers.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The value of the stemmed form, C
elementType = NULL
multipleReferencesAllowed = NULL
name = value
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.StemmedForm
supertypeName = de.julielab.jcore.types.Annotation

35: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Represents a morpheme of a compound.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The lemma of the simplex, C
elementType = NULL
multipleReferencesAllowed = NULL
name = lemma
rangeTypeName = de.julielab.jcore.types.Lemma

}

name = de.julielab.jcore.types.Simplex
supertypeName = de.julielab.jcore.types.Annotation

36: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = An abbreviation is a letter or group of letters, taken from a word or words. For example, the word "abbreviation" can be abbreviated as "abbr." or "abbrev."
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The full form of an abbreviation. For example he fullform, for example for HLA (human leukocyte antigen), O
elementType = NULL
multipleReferencesAllowed = NULL
name = expan
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Reference to the text span that contains the  full form of the abbreviation/acronym
elementType = NULL
multipleReferencesAllowed = NULL
name = textReference
rangeTypeName = de.julielab.jcore.types.AbbreviationLongform

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The definedHere is true if the abbreviation/acronym is defined for the first time in the text, e.g. in "interleukin 2 (Il-2) receptor", it can be true only for locally introduced abbreviations/acronyms.
elementType = NULL
multipleReferencesAllowed = NULL
name = definedHere
rangeTypeName = uima.cas.Boolean

}

name = de.julielab.jcore.types.Abbreviation
supertypeName = de.julielab.jcore.types.Annotation

37: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Abbreviation includes acronyms written as the initial letter or letters of words, and pronounced on the basis of this abbreviated written form.
features = Array{}

name = de.julielab.jcore.types.Acronym
supertypeName = de.julielab.jcore.types.Abbreviation

38: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Describes a word structure, default grammatical features dependent of a word category, see subtypes
features = Array{}

name = de.julielab.jcore.types.GrammaticalFeats
supertypeName = de.julielab.jcore.types.Annotation

39: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Describes a word structure, default grammatical features of a noun
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Gender, C
elementType = NULL
multipleReferencesAllowed = NULL
name = gender
rangeTypeName = de.julielab.jcore.types.Gender

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Case. C
elementType = NULL
multipleReferencesAllowed = NULL
name = case
rangeTypeName = de.julielab.jcore.types.Case

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Number, C
elementType = NULL
multipleReferencesAllowed = NULL
name = number
rangeTypeName = de.julielab.jcore.types.Number

}

name = de.julielab.jcore.types.NounFeats
supertypeName = de.julielab.jcore.types.GrammaticalFeats

40: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Describes a word structure, default grammatical features of a verb
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Tense
elementType = NULL
multipleReferencesAllowed = NULL
name = tense
rangeTypeName = de.julielab.jcore.types.Tense

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Person
elementType = NULL
multipleReferencesAllowed = NULL
name = person
rangeTypeName = de.julielab.jcore.types.Person

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Number
elementType = NULL
multipleReferencesAllowed = NULL
name = number
rangeTypeName = de.julielab.jcore.types.Number

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Voice
elementType = NULL
multipleReferencesAllowed = NULL
name = voice
rangeTypeName = de.julielab.jcore.types.Voice

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Aspect
elementType = NULL
multipleReferencesAllowed = NULL
name = aspect
rangeTypeName = de.julielab.jcore.types.Aspect

}

name = de.julielab.jcore.types.VerbFeats
supertypeName = de.julielab.jcore.types.GrammaticalFeats

41: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Describes a word structure, default grammatical features of a adjective
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Degree
elementType = NULL
multipleReferencesAllowed = NULL
name = degree
rangeTypeName = de.julielab.jcore.types.Degree

}

name = de.julielab.jcore.types.AdjectiveFeats
supertypeName = de.julielab.jcore.types.GrammaticalFeats

42: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Describes a word structure, default grammatical features of  pronouns
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Gender
elementType = NULL
multipleReferencesAllowed = NULL
name = gender
rangeTypeName = de.julielab.jcore.types.Gender

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Case
elementType = NULL
multipleReferencesAllowed = NULL
name = case
rangeTypeName = de.julielab.jcore.types.Case

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Number
elementType = NULL
multipleReferencesAllowed = NULL
name = number
rangeTypeName = de.julielab.jcore.types.Number

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Person
elementType = NULL
multipleReferencesAllowed = NULL
name = person
rangeTypeName = de.julielab.jcore.types.Person

}

name = de.julielab.jcore.types.PronounFeats
supertypeName = de.julielab.jcore.types.GrammaticalFeats

43: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = masculine

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = feminine

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = neutrum

}

description = 
features = Array{}

name = de.julielab.jcore.types.Gender
supertypeName = uima.cas.String

44: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = common

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = genitive

}

description = 
features = Array{}

name = de.julielab.jcore.types.Case
supertypeName = uima.cas.String

45: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = singular

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = plural

}

description = 
features = Array{}

name = de.julielab.jcore.types.Number
supertypeName = uima.cas.String

46: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = present

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = past

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = future

}

description = 
features = Array{}

name = de.julielab.jcore.types.Tense
supertypeName = uima.cas.String

47: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = 1

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = 2

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = 3

}

description = 
features = Array{}

name = de.julielab.jcore.types.Person
supertypeName = uima.cas.String

48: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = passive

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = active

}

description = 
features = Array{}

name = de.julielab.jcore.types.Voice
supertypeName = uima.cas.String

49: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = perfective

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = progressive

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = perfective_progressive

}

description = 
features = Array{}

name = de.julielab.jcore.types.Aspect
supertypeName = uima.cas.String

50: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = positive

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = comparative

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = superlative

}

description = 
features = Array{}

name = de.julielab.jcore.types.Degree
supertypeName = uima.cas.String

51: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = Every character is a lowercase letter: token
string = lowercase

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = Every character is an uppercase letter: TOKEN
string = uppercase

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = The first character is an uppercase letter; all other characters are lowercase letters: Token
string = capitalized

3: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = There is more than one uppercase letter in the token: ToKEn
string = multicaps

4: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = The token is a single uppercase letter: T
string = initcaps

5: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = with one or more hyphens: token-token
string = hyphenated

6: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = The token contains  dots: T.O.K.E.N.
string = dotted

7: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = The token is a single uppercase letter followed by a dot: T.
string = initdot

8: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = e.g. p53
string = alphanumeric

9: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = The token is an arithmetic or algebraic operator
string = arithmetic

10: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = apostrophe

11: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = doublequote

12: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = e.g. 12345 or .678
string = number

13: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 123-456
string = numberrange

14: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = The token is an opening or closing bracket, brace, parenthesis
string = bracket

15: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = member of set [,.?!:;]
string = punct

16: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = space, tab, newline, carriage return
string = space

17: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = The token is any sequence of characters that does not match any of the above descriptions
string = other

}

description = As more than one value might apply to a token, there is a StringList that can be filled with all values that apply for this token.
features = Array{}

name = de.julielab.jcore.types.Orthography
supertypeName = uima.cas.String

52: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Results of the chunking (shallow Parsing (see Abney))
features = Array{}

name = de.julielab.jcore.types.Chunk
supertypeName = de.julielab.jcore.types.Annotation

53: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.ChunkNP
supertypeName = de.julielab.jcore.types.Chunk

54: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = This encodes a complex noun phrase (CNP) which is usually an extension of a ChunkNP (see, e.g., jcore-cnp-extractor-ae). A CNP is currently defined to be the top-modes noun phrase of a constituency parse tree (excluding some special phrases such as appositions and SBARs).
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = number of this complex NP in the given sentence
elementType = NULL
multipleReferencesAllowed = NULL
name = chunkID
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the number of the sentence in which this complex NP is
elementType = NULL
multipleReferencesAllowed = NULL
name = sentenceID
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.ChunkComplexNP
supertypeName = de.julielab.jcore.types.Annotation

55: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.ChunkVP
supertypeName = de.julielab.jcore.types.Chunk

56: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.ChunkPP
supertypeName = de.julielab.jcore.types.Chunk

57: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.ChunkADJP
supertypeName = de.julielab.jcore.types.Chunk

58: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.ChunkADVP
supertypeName = de.julielab.jcore.types.Chunk

59: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.ChunkLST
supertypeName = de.julielab.jcore.types.Chunk

60: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.ChunkSBAR
supertypeName = de.julielab.jcore.types.Chunk

61: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.ChunkCONJP
supertypeName = de.julielab.jcore.types.Chunk

62: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.ChunkPRT
supertypeName = de.julielab.jcore.types.Chunk

63: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = This type represents the span that some cue word like negation or hedging applies to.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The cue word or phrase the induces this scope.
elementType = NULL
multipleReferencesAllowed = NULL
name = cue
rangeTypeName = de.julielab.jcore.types.Annotation

}

name = de.julielab.jcore.types.Scope
supertypeName = de.julielab.jcore.types.Chunk

64: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Syntactic dependency relation annotation, see subtypes
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Head (Token) of the analyzed dependency relation, C
elementType = NULL
multipleReferencesAllowed = NULL
name = head
rangeTypeName = de.julielab.jcore.types.Token

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The dependency relations can be projective or not, C
elementType = NULL
multipleReferencesAllowed = NULL
name = projective
rangeTypeName = uima.cas.Boolean

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The label of the relation (e.g. SBJ, OBJ, DEP)
elementType = NULL
multipleReferencesAllowed = NULL
name = label
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.DependencyRelation
supertypeName = de.julielab.jcore.types.Annotation

65: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = The super-type for the constituent annotation, see subtypes
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The parent in a constituency tree, C
elementType = NULL
multipleReferencesAllowed = NULL
name = parent
rangeTypeName = de.julielab.jcore.types.Constituent

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The head can be extracted with head rules, O
elementType = NULL
multipleReferencesAllowed = NULL
name = head
rangeTypeName = de.julielab.jcore.types.Token

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The category of the constituent (e.g. NP, VP)
elementType = NULL
multipleReferencesAllowed = NULL
name = cat
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.Constituent
supertypeName = de.julielab.jcore.types.Annotation

66: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Penn Treebank constituent annotation (see Penn Treebank)
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Form/function discrepancies, O
elementType = NULL
multipleReferencesAllowed = NULL
name = formFuncDisc
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Grammatical role, O
elementType = NULL
multipleReferencesAllowed = NULL
name = gramRole
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Adverbials are generally VP adjuncts.
elementType = NULL
multipleReferencesAllowed = NULL
name = adv
rangeTypeName = uima.cas.String

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Miscellaneous
elementType = NULL
multipleReferencesAllowed = NULL
name = misc
rangeTypeName = uima.cas.String

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = nullElement
rangeTypeName = uima.cas.String

5: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Th reference from the null constituent to the corresponding lexicalized constituent, O
elementType = NULL
multipleReferencesAllowed = NULL
name = ref
rangeTypeName = de.julielab.jcore.types.Constituent

6: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = In the case of gapping the reference to the corresponding constituent, O
elementType = NULL
multipleReferencesAllowed = NULL
name = map
rangeTypeName = de.julielab.jcore.types.Constituent

7: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Marks elements that appear before the subject in a declarative sentence, O
elementType = NULL
multipleReferencesAllowed = NULL
name = tpc
rangeTypeName = uima.cas.Boolean

}

name = de.julielab.jcore.types.PTBConstituent
supertypeName = de.julielab.jcore.types.Constituent

67: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Ohta, Tomoko, Yuka Tateisi, Hideki Mima and Jun'ichi Tsujii. (2002). GENIA Corpus: an Annotated Research Abstract Corpus in Molecular Biology Domain. In the Proceedings of he Human Language Technology Conference (HLT 2002). pp73--77.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Marks coordinations, O
elementType = NULL
multipleReferencesAllowed = NULL
name = syn
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.GENIAConstituent
supertypeName = de.julielab.jcore.types.PTBConstituent

68: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Mark A. Mandel. Integrated Annotation of Biomedical Text: Creating the PennBioIE Corpus. March 2006. Text Mining, Ontologies and Natural Language Processing in Biomedicine.
features = Array{}

name = de.julielab.jcore.types.PennBioIEConstituent
supertypeName = de.julielab.jcore.types.PTBConstituent

69: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = resolved
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = elliptical
rangeTypeName = uima.cas.Boolean

}

name = de.julielab.jcore.types.Coordination
supertypeName = de.julielab.jcore.types.Annotation

70: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.EEE
supertypeName = de.julielab.jcore.types.Coordination

71: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = cat
rangeTypeName = de.julielab.jcore.types.CoordinationElement_Value

}

name = de.julielab.jcore.types.CoordinationElement
supertypeName = de.julielab.jcore.types.Annotation

72: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = conjunct

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = conjunction

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = antecedent

}

description = 
features = Array{}

name = de.julielab.jcore.types.CoordinationElement_Value
supertypeName = uima.cas.String

73: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = This annotation marks the span of a sentence.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = segment
rangeTypeName = de.julielab.jcore.types.Segment

}

name = de.julielab.jcore.types.Sentence
supertypeName = de.julielab.jcore.types.Annotation

74: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.PrunedDependencyRelation
supertypeName = de.julielab.jcore.types.DependencyRelation

75: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.PrimaryDependencyRelation
supertypeName = de.julielab.jcore.types.DependencyRelation

76: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = This annotation type represents the text reference to an abbreviation.
features = Array{}

name = de.julielab.jcore.types.AbbreviationLongform
supertypeName = de.julielab.jcore.types.Annotation

77: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = A paragraph is a self-contained unit of discourse in a written text dealing with a particular point or idea.
features = Array{}

name = de.julielab.jcore.types.Paragraph
supertypeName = de.julielab.jcore.types.Zone

78: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = a section is a part of the text that often has a heading, an id, a section type, figures, tables, citations and footnotes that occur in this section
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the title of the section
elementType = NULL
multipleReferencesAllowed = NULL
name = sectionHeading
rangeTypeName = de.julielab.jcore.types.Title

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the type of the section (e.g. results)
elementType = NULL
multipleReferencesAllowed = NULL
name = sectionType
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the text objects (figure, table, boxed text etc.) that are associated with a particular section
elementType = de.julielab.jcore.types.TextObject
multipleReferencesAllowed = true
name = textObjects
rangeTypeName = uima.cas.FSArray

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the id of the section, for example as mentioned in the original file, or level of the section
elementType = NULL
multipleReferencesAllowed = NULL
name = sectionId
rangeTypeName = uima.cas.String

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = depth of the section, e.g. 0 -> section, 1 -> subsection, 2 -> sub-subsection, ...
elementType = NULL
multipleReferencesAllowed = NULL
name = depth
rangeTypeName = uima.cas.Integer

5: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The section label, if given. This might, for example, just be the section number.
elementType = NULL
multipleReferencesAllowed = NULL
name = label
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.Section
supertypeName = de.julielab.jcore.types.Zone

79: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = A Zone is a distinct division of text. It is an abstract Type and provides a parent type for sub-types which represent various kinds of text zones.
features = Array{}

name = de.julielab.jcore.types.Zone
supertypeName = de.julielab.jcore.types.Annotation

80: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Title annotates titles covering various text units, including the whole paper, sections and subsections.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The type of the title:
table: title of a table
figure: title of a figure
caption: title of a caption
footnote: title of a footnote
elementType = NULL
multipleReferencesAllowed = NULL
name = titleType
rangeTypeName = de.julielab.jcore.types.TitleType

}

name = de.julielab.jcore.types.Title
supertypeName = de.julielab.jcore.types.Zone

81: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = the caption of figures, tables etc.

feature captionTitle is a Title-Annotation of the title of the caption, if existent.

feature captionType is an Enumeration, stating to what type of entity the caption belongs, e.g. figure or table
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The title of a figure / table caption, if it exists
elementType = NULL
multipleReferencesAllowed = NULL
name = captionTitle
rangeTypeName = de.julielab.jcore.types.Title

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The type of entity, this caption belongs to, e.g. figure or table
elementType = NULL
multipleReferencesAllowed = NULL
name = captionType
rangeTypeName = de.julielab.jcore.types.CaptionType

}

name = de.julielab.jcore.types.Caption
supertypeName = de.julielab.jcore.types.Zone

82: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Object, on our case, are annotations such as figures, tables, boxed text etc.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = such as figure, table, boxed-text etc.
elementType = NULL
multipleReferencesAllowed = NULL
name = objectType
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the id of the object as found in the text
elementType = NULL
multipleReferencesAllowed = NULL
name = objectId
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the label of an object
elementType = NULL
multipleReferencesAllowed = NULL
name = objectLabel
rangeTypeName = uima.cas.String

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the caption that comes with the object
elementType = NULL
multipleReferencesAllowed = NULL
name = objectCaption
rangeTypeName = de.julielab.jcore.types.Caption

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The title annotation of the text object, if it exists. The title might correspond to the objectLabel (which is of type String and thus no annotation on its own).
elementType = NULL
multipleReferencesAllowed = NULL
name = objectTitle
rangeTypeName = de.julielab.jcore.types.Title

}

name = de.julielab.jcore.types.TextObject
supertypeName = de.julielab.jcore.types.Zone

83: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Annotation of the complete abstract.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = A List of all parts of a structured abstract. Empty, if the abstract consists of only one part and has no titles.
elementType = de.julielab.jcore.types.AbstractSection
multipleReferencesAllowed = NULL
name = structuredAbstractParts
rangeTypeName = uima.cas.FSArray

}

name = de.julielab.jcore.types.AbstractText
supertypeName = de.julielab.jcore.types.Zone

84: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Text-markup information (italic, bold etc.) on any (e.g. character) level. Allows to keep the original style markup of the text, several style types might be set to same (or overlapping) range, when different styles are set to the same text region.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the name of the style used.
elementType = NULL
multipleReferencesAllowed = NULL
name = styleName
rangeTypeName = de.julielab.jcore.types.StyleName

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the encoding used.
elementType = NULL
multipleReferencesAllowed = NULL
name = encoding
rangeTypeName = de.julielab.jcore.types.Encoding

}

name = de.julielab.jcore.types.Style
supertypeName = de.julielab.jcore.types.Annotation

85: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = slanted

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = italic

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = bold

3: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = underscore

4: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = stricke-though

}

description = 
features = Array{}

name = de.julielab.jcore.types.StyleName
supertypeName = uima.cas.String

86: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = UTF-8

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = UTF-16

}

description = Encoding Information
features = Array{}

name = de.julielab.jcore.types.Encoding
supertypeName = uima.cas.String

87: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = used for annotation of lists
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = contains items of the level 1. The items of the level 1 could contain further items of next level and so on in order to represent an iterative structure of list items.
elementType = de.julielab.jcore.types.ListItem
multipleReferencesAllowed = true
name = itemList
rangeTypeName = uima.cas.FSArray

}

name = de.julielab.jcore.types.List
supertypeName = de.julielab.jcore.types.Zone

88: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = item of a list
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = items of the next level (sub-items)
elementType = de.julielab.jcore.types.ListItem
multipleReferencesAllowed = true
name = itemList
rangeTypeName = uima.cas.FSArray

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Level of indentation of the list item.
elementType = NULL
multipleReferencesAllowed = NULL
name = level
rangeTypeName = uima.cas.Integer

}

name = de.julielab.jcore.types.ListItem
supertypeName = de.julielab.jcore.types.Zone

89: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Title of a text section in contrast to the title of the whole document.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = depth of the section, e.g. 0 -> section, 1 -> subsection, 2 -> sub-subsection, ...
elementType = NULL
multipleReferencesAllowed = NULL
name = depth
rangeTypeName = uima.cas.Integer

}

name = de.julielab.jcore.types.SectionTitle
supertypeName = de.julielab.jcore.types.Title

90: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Annotation for all elements in the CAS that belong to figures, e.g. figure title, figure caption etc.
features = Array{}

name = de.julielab.jcore.types.Figure
supertypeName = de.julielab.jcore.types.TextObject

91: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = An annotation for CAS elements that belong to a table, e.g. table title, table caption etc.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = An array collecting all footnotes, appearing in this table
elementType = de.julielab.jcore.types.Footnote
multipleReferencesAllowed = NULL
name = footnotes
rangeTypeName = uima.cas.FSArray

}

name = de.julielab.jcore.types.Table
supertypeName = de.julielab.jcore.types.TextObject

92: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Footnotes of all kinds, i.e. footnotes found in running text or in tables etc.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = footnoteTitle
rangeTypeName = de.julielab.jcore.types.Title

}

name = de.julielab.jcore.types.Footnote
supertypeName = de.julielab.jcore.types.Zone

93: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The title of a part of a structured abstract, e.g. "Background", "Methods", "Results", ...
elementType = NULL
multipleReferencesAllowed = NULL
name = abstractSectionHeading
rangeTypeName = de.julielab.jcore.types.Title

}

name = de.julielab.jcore.types.AbstractSection
supertypeName = de.julielab.jcore.types.Zone

94: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = The whole bibliography, beginning with a title like e.g. References or Literature and ending at the end of the last reference.
features = Array{}

name = de.julielab.jcore.types.Bibliography
supertypeName = de.julielab.jcore.types.Zone

95: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = table

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = figure

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = caption

3: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = footnote

4: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = Denotes the heading of a section of a structured abstract
string = abstractSection

5: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = Denotes the document title
string = document

6: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = other

7: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = section

}

description = The type of a title:
abstract: title of an abstract or abstract part
table: title of a table
figure: title of a figure
caption: title of a caption
footnote: title of a footnote
abstract: title of an abstract or abstract part
document: title of the document
features = Array{}

name = de.julielab.jcore.types.TitleType
supertypeName = uima.cas.String

96: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = table

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = figure

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = other

}

description = The type of entity the Caption belongs to, e.g. a figure or a table
features = Array{}

name = de.julielab.jcore.types.CaptionType
supertypeName = uima.cas.String

97: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = A segment is comparable to "de.julielab.jcore.types.Section" but for medical document (e.g. discharge summaries) we want a distinction between these types
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = SecTag reference??
elementType = NULL
multipleReferencesAllowed = NULL
name = value
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.Segment
supertypeName = de.julielab.jcore.types.Zone

98: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Used for document-internal references like literature references, footnotes etc.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The reference type: literature, figure, footnote etc.
elementType = NULL
multipleReferencesAllowed = NULL
name = reftype
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The ID of the referenced object.
elementType = NULL
multipleReferencesAllowed = NULL
name = refid
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.InternalReference
supertypeName = de.julielab.jcore.types.Annotation

99: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Biomedical Entity (e.g. gene, organism, cell type)
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The species this BioEntityMentions refers to, if known.
elementType = NULL
multipleReferencesAllowed = NULL
name = species
rangeTypeName = uima.cas.StringArray

}

name = de.julielab.jcore.types.BioEntityMention
supertypeName = de.julielab.jcore.types.EntityMention

100: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.Gene
supertypeName = de.julielab.jcore.types.BioEntityMention

101: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.GeneMutation
supertypeName = de.julielab.jcore.types.BioEntityMention

102: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.PointMutation
supertypeName = de.julielab.jcore.types.GeneMutation

103: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.MiRNA
supertypeName = de.julielab.jcore.types.BioEntityMention

104: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.Disease
supertypeName = de.julielab.jcore.types.BioEntityMention

105: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.Organism
supertypeName = de.julielab.jcore.types.BioEntityMention

106: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.UnspecifiedOrganism
supertypeName = de.julielab.jcore.types.Organism

107: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = attributes to an organism such as e.g. sex, developmental stage, transplantation type ...
features = Array{}

name = de.julielab.jcore.types.OrganismAttribute
supertypeName = de.julielab.jcore.types.BioEntityMention

108: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.BioEventMention
supertypeName = de.julielab.jcore.types.EventMention

109: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.BioRelationMention
supertypeName = de.julielab.jcore.types.RelationMention

110: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Chemical Entity
features = Array{}

name = de.julielab.jcore.types.Chemicals
supertypeName = de.julielab.jcore.types.BioEntityMention

111: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Cell Entity
features = Array{}

name = de.julielab.jcore.types.Cell
supertypeName = de.julielab.jcore.types.BioEntityMention

112: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Mesh Term
features = Array{}

name = de.julielab.jcore.types.MeshMention
supertypeName = de.julielab.jcore.types.BioEntityMention

113: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.Protein
supertypeName = de.julielab.jcore.types.BioEntityMention

114: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = created for the shared task, here we add the group
elementType = NULL
multipleReferencesAllowed = false
name = categories
rangeTypeName = uima.cas.StringArray

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = goID
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.GOMention
supertypeName = de.julielab.jcore.types.ConceptMention

115: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = A specific version of the resource entry for Gene entries.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The synonym for which this resource entry was chosen.
elementType = NULL
multipleReferencesAllowed = NULL
name = synonym
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The confidence that the textual found mention fits to the selected synonyms.
elementType = NULL
multipleReferencesAllowed = NULL
name = confidenceMention
rangeTypeName = uima.cas.Double

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Confidence that this resource entry is indeed semantically fitting to the context.
elementType = NULL
multipleReferencesAllowed = NULL
name = confidenceSemantic
rangeTypeName = uima.cas.Double

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The NCBI taxonomy ID of this gene.
elementType = NULL
multipleReferencesAllowed = NULL
name = taxonomyId
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.GeneResourceEntry
supertypeName = de.julielab.jcore.types.ResourceEntry

116: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.Enzyme
supertypeName = de.julielab.jcore.types.BioEntityMention

117: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = (Named) EntityMention (i.e. An entity is an object or set of objects in the world. Entitiy mentions may be refrenced in a text by their name, indicated by a common noun or noun phrase, or represented by a pronoun) annotation
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Head of an entity mention such as Northwest in the Northwest
elementType = NULL
multipleReferencesAllowed = NULL
name = head
rangeTypeName = de.julielab.jcore.types.Annotation

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = mention level such as PRO (many), NOM, NAM (see ACE)
elementType = NULL
multipleReferencesAllowed = NULL
name = mentionLevel
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Entry ids for the entity concatenated with the likelihood category associated with this entity (in this case the exact event/relation modified by the likelihood indicator in question is deemed to be underspecified).
elementType = NULL
multipleReferencesAllowed = NULL
name = entityString
rangeTypeName = uima.cas.StringArray

}

name = de.julielab.jcore.types.EntityMention
supertypeName = de.julielab.jcore.types.ConceptMention

118: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = A super type for all event mentions. Under this type, mentions for predicate-argument relations and eventive propositional relations are found. This terminology follows section 3.1 and more especially 3.1.3 of Ekaterina Buyko's dissertation "Event Extraction from Biomedical Texts Using
Trimmed Dependency Graphs" (http://www.db-thueringen.de/servlets/DerivateServlet/Derivate-26400/Diss2/thesis_buyko.pdf). The type system should completely follow the thesis' notion but does not due to historical reasons.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = tense
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = modality
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = de.julielab.jcore.types.ArgumentMention
multipleReferencesAllowed = true
name = arguments
rangeTypeName = uima.cas.FSArray

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = de.julielab.jcore.types.ArgumentMention
multipleReferencesAllowed = NULL
name = reorderedArguments
rangeTypeName = uima.cas.FSArray

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = polarity
rangeTypeName = uima.cas.String

5: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = used to make relations visible for LuCas
elementType = NULL
multipleReferencesAllowed = NULL
name = relationString
rangeTypeName = uima.cas.StringArray

}

name = de.julielab.jcore.types.GeneralEventMention
supertypeName = de.julielab.jcore.types.ConceptMention

119: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Binary Relation between Entitiy Mentions. While quite generally called "Relation", this type is commonly used for dynamic, i.e. eventive, propositional relations such as the regulation between genes.
features = Array{}

name = de.julielab.jcore.types.RelationMention
supertypeName = de.julielab.jcore.types.GeneralEventMention

120: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = This type was introduced during the participation of the BioNLP Shared Task 2009 by Ekaterina Buyko. Therefore, it mainly satisfies the requirements of the event type of this challenge. This includes the use of an "event trigger" which is not necessary for all relation types. In practice, the type is used to capture predicate-argument relations (such as binding) as well as eventive propositional relations (such as phosphorylation or up- and down-regulation). The latter category also includes events where one of the event arguments is an event itself.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = genericity
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = trigger
rangeTypeName = de.julielab.jcore.types.EventTrigger

}

name = de.julielab.jcore.types.EventMention
supertypeName = de.julielab.jcore.types.GeneralEventMention

121: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Reference to the Annotation Object that acts as a argument here
elementType = NULL
multipleReferencesAllowed = NULL
name = ref
rangeTypeName = de.julielab.jcore.types.Annotation

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the role of the argument
elementType = NULL
multipleReferencesAllowed = NULL
name = role
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = used to make relations visible for LuCas
elementType = NULL
multipleReferencesAllowed = NULL
name = relationString
rangeTypeName = uima.cas.StringArray

}

name = de.julielab.jcore.types.ArgumentMention
supertypeName = de.julielab.jcore.types.Annotation

122: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.Timex2Mention
supertypeName = de.julielab.jcore.types.ConceptMention

123: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = specificType
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The reference to the Concept, we use here the super type TOP in order to avoid the recursive dependencies between type systems
elementType = NULL
multipleReferencesAllowed = NULL
name = ref
rangeTypeName = uima.cas.TOP

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = de.julielab.jcore.types.ResourceEntry
multipleReferencesAllowed = true
name = resourceEntryList
rangeTypeName = uima.cas.FSArray

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = This feature provides the text of the annotated concept mention (e.g., entity mention). important for easily representing discontinious mentions such as 'T cell'  in th expression 'T and B cell'
elementType = NULL
multipleReferencesAllowed = NULL
name = textualRepresentation
rangeTypeName = uima.cas.String

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = likelihood
rangeTypeName = de.julielab.jcore.types.LikelihoodIndicator

}

name = de.julielab.jcore.types.ConceptMention
supertypeName = de.julielab.jcore.types.Annotation

124: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.ValueMention
supertypeName = de.julielab.jcore.types.ConceptMention

125: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = probability of this trigger to be an event or relation trigger
elementType = NULL
multipleReferencesAllowed = NULL
name = probability
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = specifity to be an event trigger, compare with using in other context
elementType = NULL
multipleReferencesAllowed = NULL
name = specifity
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = how important is this trigger for the event
elementType = NULL
multipleReferencesAllowed = NULL
name = importance
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.EventTrigger
supertypeName = de.julielab.jcore.types.ConceptMention

126: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = ontology class mention
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = ID of the corresponding ontology class
elementType = NULL
multipleReferencesAllowed = NULL
name = ontClassId
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = name or ID of the ontology the class comes from
elementType = NULL
multipleReferencesAllowed = NULL
name = sourceOntology
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Names or IDs of associated semantic types.
elementType = NULL
multipleReferencesAllowed = NULL
name = semanticTypes
rangeTypeName = uima.cas.StringArray

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The preferred term associated with the corresponding ontology class.
elementType = NULL
multipleReferencesAllowed = NULL
name = preferredTerm
rangeTypeName = uima.cas.String

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = List of tokens the ontology class mention is comprised of.
elementType = de.julielab.jcore.types.Token
multipleReferencesAllowed = NULL
name = matchedTokens
rangeTypeName = uima.cas.FSArray

5: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = E.g. an ontology class label that was found to correspond to the mention (e.g. as result of a dictionary lookup).
elementType = NULL
multipleReferencesAllowed = NULL
name = matchedSourceTerm
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.OntClassMention
supertypeName = de.julielab.jcore.types.ConceptMention

127: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = domain
rangeTypeName = de.julielab.jcore.types.Annotation

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = range
rangeTypeName = de.julielab.jcore.types.Annotation

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = de.julielab.jcore.types.Annotation
multipleReferencesAllowed = NULL
name = domainList
rangeTypeName = uima.cas.FSArray

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = de.julielab.jcore.types.Annotation
multipleReferencesAllowed = NULL
name = rangeList
rangeTypeName = uima.cas.FSArray

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = name
rangeTypeName = uima.cas.String

5: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = ID of the ontology relation the relation mention refers to.
elementType = NULL
multipleReferencesAllowed = NULL
name = ontRelationId
rangeTypeName = uima.cas.String

6: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Ontology defining the relation to which the relation mention refers to.
elementType = NULL
multipleReferencesAllowed = NULL
name = sourceOntology
rangeTypeName = uima.cas.String

7: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Textual representation of the ontology relation. Could be redundant to the covered text of the relation mention annotation.
elementType = NULL
multipleReferencesAllowed = NULL
name = textualRepresentation
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.OntRelationMention
supertypeName = de.julielab.jcore.types.Annotation

128: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = This type refers to the likelihood aspect of epistemic modality. The annotation marks epistemic modal expressions used to linguistically modify the likelihood of an event or of a relation that an entity might be in. The employed likelihood scale also includes negation (0% likelihood) and assertion (100% likelihood), the latter being the default case where no explicit likelihood modifier is present in the text.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = likelihood
rangeTypeName = de.julielab.jcore.types.Likelihood

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = entityAndRelationString
rangeTypeName = uima.cas.StringArray

}

name = de.julielab.jcore.types.LikelihoodIndicator
supertypeName = de.julielab.jcore.types.Annotation

129: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = negation

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = low

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = moderate

3: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = high

4: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = assertion

5: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = investigation

}

description = 
features = Array{}

name = de.julielab.jcore.types.Likelihood
supertypeName = uima.cas.String

130: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.OntClassMentionAggregate
supertypeName = de.julielab.jcore.types.OntClassMention

131: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.OntClassMentionAggElement
supertypeName = de.julielab.jcore.types.OntClassMention

132: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.OntClassMentionSimple
supertypeName = de.julielab.jcore.types.OntClassMention

133: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = This type stores required information for the appropriate handling of consistent XMI deserialization in the XMI reader and serialization in the XMI consumer with respect to the separate storage of annotations.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The primary key of an artifact, possibly consisting of multiple components.
elementType = NULL
multipleReferencesAllowed = NULL
name = primaryKey
rangeTypeName = uima.cas.StringArray

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The subset table that is used to specify the set of documents to processes and to store processing status information. May be empty in the case the documents are directly read from a data table.
elementType = NULL
multipleReferencesAllowed = NULL
name = subsetTable
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = This feature is used by the DBCheckpointAE. It allows components in the pipeline to prevent a document to be marked as being finished with processing. This can be used to indicate issues with specific documents which will require reprocessing.
elementType = NULL
multipleReferencesAllowed = NULL
name = doNotMarkAsProcessed
rangeTypeName = uima.cas.Boolean

}

name = de.julielab.jcore.types.ext.DBProcessingMetaData
supertypeName = uima.tcas.Annotation

}

vendor = NULL
version = NULL

vendor = NULL
version = NULL

primitive = true
resourceManagerConfiguration = org.apache.uima.resource.metadata.impl.ResourceManagerConfiguration_impl: 
description = NULL
externalResourceBindings = Array{0: org.apache.uima.resource.metadata.impl.ExternalResourceBinding_impl: 
key = AnnotationSource
resourceName = Annotation Source file

}

externalResources = Array{0: org.apache.uima.resource.impl.ExternalResourceDescription_impl: 
description = A configurable resource for annotations.
implementationName = de.julielab.jcore.ae.annotationadder.annotationsources.InMemoryFileTextAnnotationProvider
name = Annotation Source file
resourceSpecifier = org.apache.uima.resource.impl.ConfigurableDataResourceSpecifier_impl: 
metaData = org.apache.uima.resource.metadata.impl.ResourceMetaData_impl: 
UUID = NULL
configurationParameterDeclarations = org.apache.uima.resource.metadata.impl.ConfigurationParameterDeclarations_impl: 
commonParameters = Array{}

configurationGroups = Array{}

configurationParameters = Array{0: org.apache.uima.resource.metadata.impl.ConfigurationParameter_impl: 
description = The qualified class name of the annotation file format parser. Defaults to 'de.julielab.jcore.ae.annotationadder.annotationformat.SimpleTSVEntityAnnotationFormat'.
externalOverrideName = NULL
mandatory = false
multiValued = false
name = AnnotationFormatClass
overrides = Array{}

type = String

}

defaultGroupName = NULL
searchStrategy = NULL

configurationParameterSettings = org.apache.uima.resource.metadata.impl.ConfigurationParameterSettings_impl: 
parameterSettings = Array{0: org.apache.uima.resource.metadata.impl.NameValuePair_impl: 
name = AnnotationFormatClass
value = de.julielab.jcore.ae.annotationadder.annotationformat.SimpleTSVEntityWithDocumentTextShaAnnotationFormat

}

settingsForGroups = {}

copyright = NULL
description = NULL
name = 
vendor = NULL
version = NULL

url = file:/var/data/common-pipelines/pubmed/annotation-transfer/flair-genedocs-pubmed-sha256-offsets.txt.gz


}

import = NULL
imports = Array{}

name = NULL
vendor = NULL
version = NULL

sofaMappings = NULL
delegateAnalysisEngineSpecifiersWithImports = {}
 and org.apache.uima.analysis_engine.impl.AnalysisEngineDescription_impl: 
annotatorImplementationName = de.julielab.jcore.ae.annotationadder.AnnotationAdderAnnotator
externalResourceDependencies = Array{0: org.apache.uima.resource.impl.ExternalResourceDependency_impl: 
description = A provider of annotations to add to the CAS. Must implement the
                de.julielab.jcore.ae.annotationadder.annotationsources.AnnotationProvider interface.
interfaceName = de.julielab.jcore.ae.annotationadder.annotationsources.AnnotationProvider
key = AnnotationSource
optional = false

}

flowControllerDeclaration = NULL
frameworkImplementation = org.apache.uima.java
implementationName = de.julielab.jcore.ae.annotationadder.AnnotationAdderAnnotator
metaData = org.apache.uima.analysis_engine.metadata.impl.AnalysisEngineMetaData_impl: 
UUID = NULL
asynchronousModeSupported = false
capabilities = Array{}

configurationParameterDeclarations = org.apache.uima.resource.metadata.impl.ConfigurationParameterDeclarations_impl: 
commonParameters = Array{}

configurationGroups = Array{}

configurationParameters = Array{0: org.apache.uima.resource.metadata.impl.ConfigurationParameter_impl: 
description = Determines the interpretation of annotation offsets. Possible values: "CHARACTER" and "TOKEN". For the TOKEN offset mode, the correct tokenization must be given in the CAS. TOKEN offsets start with 1, CHARACTER offsets are 0-based. Defaults to CHARACTER.
externalOverrideName = NULL
mandatory = false
multiValued = false
name = OffsetMode
overrides = Array{}

type = String

1: org.apache.uima.resource.metadata.impl.ConfigurationParameter_impl: 
description = Most external annotation formats require that the qualified name a UIMA type is provided which reflects the annotation to be created for the respective annotation. With this parameter, a default type can be provided which will be forwarded to the format parser. If the parser supports it, the type can then be omitted from the external annotation source.
externalOverrideName = NULL
mandatory = false
multiValued = false
name = DefaultUimaType
overrides = Array{}

type = String

}

defaultGroupName = NULL
searchStrategy = NULL

configurationParameterSettings = org.apache.uima.resource.metadata.impl.ConfigurationParameterSettings_impl: 
parameterSettings = Array{0: org.apache.uima.resource.metadata.impl.NameValuePair_impl: 
name = OffsetMode
value = CHARACTER

}

settingsForGroups = {}

copyright = NULL
description = This component helps to import annotations made on the exact CAS document text by an external process back into the CAS. To this end, the component is prepared to read several data formats. Currently, simple offset-based annotations are supported with configurable UIMA types. The component supports character and token based offsets.
flowConstraints = NULL
fsIndexCollection = org.apache.uima.resource.metadata.impl.FsIndexCollection_impl: 
description = NULL
fsIndexes = Array{}

imports = Array{}

name = NULL
vendor = NULL
version = NULL

fsIndexes = Array{}

name = JCoRe Annotation Adder
operationalProperties = org.apache.uima.resource.metadata.impl.OperationalProperties_impl: 
modifiesCas = true
multipleDeploymentAllowed = true
outputsNewCASes = false

typePriorities = NULL
typeSystem = org.apache.uima.resource.metadata.impl.TypeSystemDescription_impl: 
description = NULL
imports = Array{}

name = NULL
types = Array{0: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = The super-type for the document annotation types (Header, Descriptor)
features = Array{}

name = de.julielab.jcore.types.DocumentAnnotation
supertypeName = de.julielab.jcore.types.Annotation

1: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = The Header type stores the bibliographical document information.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The type of the document (e.g. abstract, fulltext, randomized).
elementType = NULL
multipleReferencesAllowed = NULL
name = docType
rangeTypeName = de.julielab.jcore.types.DocType

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The source of the document (e.g. WWW, database, etc).
elementType = NULL
multipleReferencesAllowed = NULL
name = source
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The identifier of the document with respect to its source. E.g.: PMID in PubMed. In combination with the source, this is a unique identifier for a document.
elementType = NULL
multipleReferencesAllowed = NULL
name = docId
rangeTypeName = uima.cas.String

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Copyright information.
elementType = NULL
multipleReferencesAllowed = NULL
name = copyright
rangeTypeName = uima.cas.String

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Indicates whether the document is truncated.
elementType = NULL
multipleReferencesAllowed = NULL
name = truncated
rangeTypeName = uima.cas.Boolean

5: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The authors of the document.
elementType = de.julielab.jcore.types.AuthorInfo
multipleReferencesAllowed = true
name = authors
rangeTypeName = uima.cas.FSArray

6: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The title of the document.
elementType = NULL
multipleReferencesAllowed = NULL
name = title
rangeTypeName = uima.cas.String

7: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The list of the publication types.
elementType = de.julielab.jcore.types.PubType
multipleReferencesAllowed = NULL
name = pubTypeList
rangeTypeName = uima.cas.FSArray

8: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The language of the document.
elementType = NULL
multipleReferencesAllowed = NULL
name = language
rangeTypeName = de.julielab.jcore.types.Language

9: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = document object identifier
elementType = NULL
multipleReferencesAllowed = NULL
name = doi
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.Header
supertypeName = de.julielab.jcore.types.DocumentAnnotation

2: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = An abstract type which should be used to store information on the publication. See subtypes Journal and an accumulative type (OtherPub)
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The name of the publication type (e.g. journal, technical report, book).
elementType = NULL
multipleReferencesAllowed = NULL
name = name
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The date on which the document was published.
elementType = NULL
multipleReferencesAllowed = NULL
name = pubDate
rangeTypeName = de.julielab.jcore.types.Date

}

name = de.julielab.jcore.types.PubType
supertypeName = de.julielab.jcore.types.Annotation

3: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = This type contains attributes to describe a journal publication.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The international standard serial number.
elementType = NULL
multipleReferencesAllowed = NULL
name = ISSN
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The volume number of the journal in which the article was published.
elementType = NULL
multipleReferencesAllowed = NULL
name = volume
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Full journal title.
elementType = NULL
multipleReferencesAllowed = NULL
name = title
rangeTypeName = uima.cas.String

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The impact factor of the journal at the time of publication.
elementType = NULL
multipleReferencesAllowed = NULL
name = impactFactor
rangeTypeName = uima.cas.String

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the short title of the Journal (e.g. "Nicotine Tob Res" for "Nicotine & tobacco research : official journal of the Society for Research on Nicotine and Tobacco")
elementType = NULL
multipleReferencesAllowed = NULL
name = shortTitle
rangeTypeName = uima.cas.String

5: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Issue of Journal
elementType = NULL
multipleReferencesAllowed = NULL
name = issue
rangeTypeName = uima.cas.String

6: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Pages of Journal
elementType = NULL
multipleReferencesAllowed = NULL
name = pages
rangeTypeName = uima.cas.String

7: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the nlm id of the journal
elementType = NULL
multipleReferencesAllowed = NULL
name = nlmId
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.Journal
supertypeName = de.julielab.jcore.types.PubType

4: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Type to store dates
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = day of the month.
elementType = NULL
multipleReferencesAllowed = NULL
name = day
rangeTypeName = uima.cas.Integer

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = month of the year.
elementType = NULL
multipleReferencesAllowed = NULL
name = month
rangeTypeName = uima.cas.Integer

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = full year (e.g. 2006 and NOT 06).
elementType = NULL
multipleReferencesAllowed = NULL
name = year
rangeTypeName = uima.cas.Integer

}

name = de.julielab.jcore.types.Date
supertypeName = de.julielab.jcore.types.Annotation

5: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Accumulative type for all other types of publications
features = Array{}

name = de.julielab.jcore.types.OtherPub
supertypeName = de.julielab.jcore.types.PubType

6: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = An abstract type for the document descriptors, there are two subclasses: one for automatically acquired meta information and one for meta information that was added manually (such as e.g. MeSH term lists)
features = Array{}

name = de.julielab.jcore.types.Descriptor
supertypeName = de.julielab.jcore.types.Annotation

7: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = The descriptor type for automatically (i.e. algorithmically) acquired meta information. It can be refined and extended.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Here the document classification result will be stored, for example for storing infos if the document is age-related or not.
elementType = de.julielab.jcore.types.DocumentClass
multipleReferencesAllowed = NULL
name = documentClasses
rangeTypeName = uima.cas.FSArray

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = A list of document topics derived from a topic model.
elementType = de.julielab.jcore.types.DocumentTopics
multipleReferencesAllowed = NULL
name = documentTopics
rangeTypeName = uima.cas.FSArray

}

name = de.julielab.jcore.types.AutoDescriptor
supertypeName = de.julielab.jcore.types.Descriptor

8: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = The descriptor type for the manually added information.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = meta information about thos document, for example who is the annotator and which semantic types are annotated in this document
elementType = NULL
multipleReferencesAllowed = NULL
name = metaInfo
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.ManualDescriptor
supertypeName = de.julielab.jcore.types.Descriptor

9: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Medical Subject Headings, see NLM's MeSH for a detailed description.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = see MeSH
elementType = NULL
multipleReferencesAllowed = NULL
name = descriptorName
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = see MeSH
elementType = NULL
multipleReferencesAllowed = NULL
name = qualifierName
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = see MeSH
elementType = NULL
multipleReferencesAllowed = NULL
name = descriptorNameMajorTopic
rangeTypeName = uima.cas.Boolean

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = see MeSH
elementType = NULL
multipleReferencesAllowed = NULL
name = qualifierNameMajorTopic
rangeTypeName = uima.cas.Boolean

}

name = de.julielab.jcore.types.MeshHeading
supertypeName = de.julielab.jcore.types.Annotation

10: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = A chemical type
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = A unique 5 to 9 digit number in hyphenated format assigned by the Chemical Abstract Service to specify chemical substances, a zero is a valid number when an actual number cannot be located or is not yet available..
elementType = NULL
multipleReferencesAllowed = NULL
name = registryNumber
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The name of the substance that the registry number or the E.C. number identifies.
elementType = NULL
multipleReferencesAllowed = NULL
name = nameOfSubstance
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.Chemical
supertypeName = de.julielab.jcore.types.Annotation

11: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = References to other databases, e.g. SwissProt, INTERPRO e.g.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The name of the DB referred to
elementType = NULL
multipleReferencesAllowed = NULL
name = name
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = A list of accession numbers for this DB.
elementType = NULL
multipleReferencesAllowed = NULL
name = acList
rangeTypeName = uima.cas.StringArray

}

name = de.julielab.jcore.types.DBInfo
supertypeName = de.julielab.jcore.types.Annotation

12: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = A term of a controlled keyword list to describe the content of the publication.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The name of the keyword.
elementType = NULL
multipleReferencesAllowed = NULL
name = name
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The keyword source (terminology).
elementType = NULL
multipleReferencesAllowed = NULL
name = source
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.Keyword
supertypeName = de.julielab.jcore.types.Annotation

13: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = abstract
string = abstract

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = fulltext
string = fulltext

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = randomized
string = randomized

3: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = used for Wikipedia articles
string = article

4: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = used for Wikipedia disambiguation-pages
string = disambiguation-page

}

description = The document type
features = Array{}

name = de.julielab.jcore.types.DocType
supertypeName = uima.cas.String

14: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = German
string = de

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = English
string = en

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = Espagnol
string = es

3: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = French
string = fr

4: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = Italian
string = it

5: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = Portuguese
string = pt

6: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = Other languages
string = other

7: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = English
string = eng

8: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = German
string = ger

9: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = Französisch
string = fre

10: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = Italienisch
string = ita

}

description = The language of the document. Possible values: based on ISO-639-1 language codes; we start with a first selection (which might be extended later).
features = Array{}

name = de.julielab.jcore.types.Language
supertypeName = uima.cas.String

15: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = A document class specification for the CAS' document text.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The name of the document class this CAS has been classified to.
elementType = NULL
multipleReferencesAllowed = NULL
name = classname
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Confidence value of the classification into this class.
elementType = NULL
multipleReferencesAllowed = NULL
name = confidence
rangeTypeName = uima.cas.Double

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = An ID of the system that did assign this document class.
elementType = NULL
multipleReferencesAllowed = NULL
name = componentId
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.DocumentClass
supertypeName = uima.tcas.Annotation

16: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = AuthorInfo Type annotates the text segments containing the information about an author and his/her affiliation information.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = An author's forename,C
elementType = NULL
multipleReferencesAllowed = NULL
name = foreName
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Affiliation of the author.
elementType = NULL
multipleReferencesAllowed = NULL
name = affiliation
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Contact information (emails, phones, etc.).
elementType = NULL
multipleReferencesAllowed = NULL
name = contact
rangeTypeName = uima.cas.String

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The last name of the author.
elementType = NULL
multipleReferencesAllowed = NULL
name = lastName
rangeTypeName = uima.cas.String

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Initials
elementType = NULL
multipleReferencesAllowed = NULL
name = initials
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.AuthorInfo
supertypeName = de.julielab.jcore.types.Annotation

17: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = relatedArticle
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.RelatedArticle
supertypeName = de.julielab.jcore.types.Annotation

18: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = de.julielab.jcore.types.RelatedArticle
multipleReferencesAllowed = true
name = relatedArticles
rangeTypeName = uima.cas.FSArray

}

name = de.julielab.jcore.types.RelatedArticleList
supertypeName = de.julielab.jcore.types.Annotation

19: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = url
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = iconUrl
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.FullTextLink
supertypeName = de.julielab.jcore.types.Annotation

20: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = de.julielab.jcore.types.FullTextLink
multipleReferencesAllowed = true
name = fullTextLinks
rangeTypeName = uima.cas.FSArray

}

name = de.julielab.jcore.types.FullTextLinkList
supertypeName = de.julielab.jcore.types.Annotation

21: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Topics label documents with vectors weights for their semantically most prominent words
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Vector of weights denoting the semantical descriptivity of one word for the respective topic
elementType = NULL
multipleReferencesAllowed = NULL
name = Weights
rangeTypeName = uima.cas.DoubleArray

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = IDs for topics determined by the modeling implementation
elementType = NULL
multipleReferencesAllowed = NULL
name = IDs
rangeTypeName = uima.cas.IntegerArray

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = ID identifying the model holding the topics to be labeled
elementType = NULL
multipleReferencesAllowed = NULL
name = ModelID
rangeTypeName = uima.cas.String

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The top words for the respective topic
elementType = NULL
multipleReferencesAllowed = NULL
name = TopicWords
rangeTypeName = uima.cas.StringArray

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Version of the model holding the topics
elementType = NULL
multipleReferencesAllowed = NULL
name = ModelVersion
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.DocumentTopics
supertypeName = de.julielab.jcore.types.DocumentAnnotation

22: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = The super-type for all types.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The component that made the annotation may put its confidence/score calculated internally here, O
elementType = NULL
multipleReferencesAllowed = NULL
name = confidence
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Indicates which NLP component has been used to derive the annotation, C
elementType = NULL
multipleReferencesAllowed = NULL
name = componentId
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = id
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.Annotation
supertypeName = uima.tcas.Annotation

23: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Chains annotations of the same type
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Annotations to be chained.
elementType = de.julielab.jcore.types.Annotation
multipleReferencesAllowed = NULL
name = value
rangeTypeName = uima.cas.FSArray

}

name = de.julielab.jcore.types.DiscontinuousAnnotation
supertypeName = de.julielab.jcore.types.Annotation

24: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = The reference to an external resource
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The name of the resource, C
elementType = NULL
multipleReferencesAllowed = NULL
name = source
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The identifier of the entry, C
elementType = NULL
multipleReferencesAllowed = NULL
name = entryId
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The version of the resource, C
elementType = NULL
multipleReferencesAllowed = NULL
name = version
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.ResourceEntry
supertypeName = de.julielab.jcore.types.Annotation

25: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Token annotation marks the span of a token and takes all additional annotations that are on the token level, including Part-of-Speech information, lemma, stemmed form,  grammatical features such as gender, number and orthographical information; furthemore, Token includes the information about dependency relations to other tokens (see correspondent annotation types for further infromation).
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the lemma information, O
elementType = NULL
multipleReferencesAllowed = NULL
name = lemma
rangeTypeName = de.julielab.jcore.types.Lemma

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = List contains part-of-speech tags of different part-of-speech tagsets (see also POSTag and subtypes), O
elementType = de.julielab.jcore.types.POSTag
multipleReferencesAllowed = true
name = posTag
rangeTypeName = uima.cas.FSArray

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Contains the stemmed form of token (see StemmedForm), O
elementType = NULL
multipleReferencesAllowed = NULL
name = stemmedForm
rangeTypeName = de.julielab.jcore.types.StemmedForm

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Contains grammatical features correspondent to the part-of-speech tag of current token (see GrammaticalFeats and subtypes), O
elementType = NULL
multipleReferencesAllowed = NULL
name = feats
rangeTypeName = de.julielab.jcore.types.GrammaticalFeats

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = see de.julielab.jcore.types.Orthogrpahy
elementType = NULL
multipleReferencesAllowed = NULL
name = orthogr
rangeTypeName = de.julielab.jcore.types.Orthography

5: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Contains a list of syntactical dependencies, see DependencyRelation, O
elementType = de.julielab.jcore.types.DependencyRelation
multipleReferencesAllowed = true
name = depRel
rangeTypeName = uima.cas.FSArray

6: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = synonyms
rangeTypeName = uima.cas.StringArray

7: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = hypernyms
rangeTypeName = uima.cas.StringArray

8: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = An array of embedding vectors for this token.
elementType = de.julielab.jcore.types.EmbeddingVector
multipleReferencesAllowed = true
name = embeddingVectors
rangeTypeName = uima.cas.FSArray

}

name = de.julielab.jcore.types.Token
supertypeName = de.julielab.jcore.types.Annotation

26: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The source of the embedding, i.e. some identifier of the method that produces the embedding.
elementType = NULL
multipleReferencesAllowed = NULL
name = source
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The actual embedding vector.
elementType = NULL
multipleReferencesAllowed = NULL
name = vector
rangeTypeName = uima.cas.DoubleArray

}

name = de.julielab.jcore.types.EmbeddingVector
supertypeName = de.julielab.jcore.types.Annotation

27: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = POS is a linguistic category of words (tokens) that are defined by their particular syntactic/morphological behaviours (e.g. noun, verb).
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Every POS tagset (see subtypes) has an identifier, C
elementType = NULL
multipleReferencesAllowed = NULL
name = tagsetId
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The value of POS (NN, JJ etc.)
elementType = NULL
multipleReferencesAllowed = NULL
name = value
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.POSTag
supertypeName = de.julielab.jcore.types.Annotation

28: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = The Penn Treebank Tag Set* in Mitchell P. Marcus, Beatrice Santorini, and Mary Ann Marcinkiewicz: Building a Large Annotated Corpus of English: The Penn Treebank, in Computational Linguistics, Volume 19, Number 2 (June 1993), pp. 313--330 (Special Issue on Using Large Corpora). TagsetId 0
features = Array{}

name = de.julielab.jcore.types.PennPOSTag
supertypeName = de.julielab.jcore.types.POSTag

29: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Genia Tag Set in Tateisi, Yuka and Jun'ichi Tsujii. (2004). Part-of-Speech Annotation of Biology Research Abstracts. In the Proceedings of 4th International Conference on Language Resource and Evaluation (LREC2004). IV. pp. 1267-1270. TagsetId 1
features = Array{}

name = de.julielab.jcore.types.GeniaPOSTag
supertypeName = de.julielab.jcore.types.POSTag

30: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Mark A. Mandel. Integrated Annotation of Biomedical Text: Creating the PennBioIE Corpus. March 2006. Text Mining, Ontologies and Natural Language Processing in Biomedicine.
features = Array{}

name = de.julielab.jcore.types.PennBioIEPOSTag
supertypeName = de.julielab.jcore.types.POSTag

31: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = For general language German texts, cf. Anne Schiller, Simone Teufel, Christine Stöckert, and Christine Thielen. Guidelines für das Tagging deutscher Textcorpora mit STTS (Kleines und großes Tagset). Inst. für masch. Sprachverarbeitung, U. Stuttgart; Seminar für Sprachwissenschaft, U. Tübingen, 1999.
features = Array{}

name = de.julielab.jcore.types.STTSPOSTag
supertypeName = de.julielab.jcore.types.POSTag

32: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = For German biomedical texts, cf. Joachim Wermter and Udo Hahn. An annotated German-language medical text corpus as language resource. In LREC 2004—Proceedings of the 4th International Conference on Language Resources and Evaluation, volume 2, pages 473–476, 2004.
features = Array{}

name = de.julielab.jcore.types.STTSMedPOSTag
supertypeName = de.julielab.jcore.types.POSTag

33: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Lemma is the canonical form of a lexeme. Lemma can be retrieved from lexicon or be produced by lemmatizer.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The value of lemma,C
elementType = NULL
multipleReferencesAllowed = NULL
name = value
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.Lemma
supertypeName = de.julielab.jcore.types.Annotation

34: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Represents a grammatical morpheme, identifies the morpheme's base form for the current token, activat- for activation. Different forms can be produced by stemmers.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The value of the stemmed form, C
elementType = NULL
multipleReferencesAllowed = NULL
name = value
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.StemmedForm
supertypeName = de.julielab.jcore.types.Annotation

35: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Represents a morpheme of a compound.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The lemma of the simplex, C
elementType = NULL
multipleReferencesAllowed = NULL
name = lemma
rangeTypeName = de.julielab.jcore.types.Lemma

}

name = de.julielab.jcore.types.Simplex
supertypeName = de.julielab.jcore.types.Annotation

36: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = An abbreviation is a letter or group of letters, taken from a word or words. For example, the word "abbreviation" can be abbreviated as "abbr." or "abbrev."
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The full form of an abbreviation. For example he fullform, for example for HLA (human leukocyte antigen), O
elementType = NULL
multipleReferencesAllowed = NULL
name = expan
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Reference to the text span that contains the  full form of the abbreviation/acronym
elementType = NULL
multipleReferencesAllowed = NULL
name = textReference
rangeTypeName = de.julielab.jcore.types.AbbreviationLongform

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The definedHere is true if the abbreviation/acronym is defined for the first time in the text, e.g. in "interleukin 2 (Il-2) receptor", it can be true only for locally introduced abbreviations/acronyms.
elementType = NULL
multipleReferencesAllowed = NULL
name = definedHere
rangeTypeName = uima.cas.Boolean

}

name = de.julielab.jcore.types.Abbreviation
supertypeName = de.julielab.jcore.types.Annotation

37: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Abbreviation includes acronyms written as the initial letter or letters of words, and pronounced on the basis of this abbreviated written form.
features = Array{}

name = de.julielab.jcore.types.Acronym
supertypeName = de.julielab.jcore.types.Abbreviation

38: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Describes a word structure, default grammatical features dependent of a word category, see subtypes
features = Array{}

name = de.julielab.jcore.types.GrammaticalFeats
supertypeName = de.julielab.jcore.types.Annotation

39: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Describes a word structure, default grammatical features of a noun
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Gender, C
elementType = NULL
multipleReferencesAllowed = NULL
name = gender
rangeTypeName = de.julielab.jcore.types.Gender

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Case. C
elementType = NULL
multipleReferencesAllowed = NULL
name = case
rangeTypeName = de.julielab.jcore.types.Case

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Number, C
elementType = NULL
multipleReferencesAllowed = NULL
name = number
rangeTypeName = de.julielab.jcore.types.Number

}

name = de.julielab.jcore.types.NounFeats
supertypeName = de.julielab.jcore.types.GrammaticalFeats

40: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Describes a word structure, default grammatical features of a verb
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Tense
elementType = NULL
multipleReferencesAllowed = NULL
name = tense
rangeTypeName = de.julielab.jcore.types.Tense

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Person
elementType = NULL
multipleReferencesAllowed = NULL
name = person
rangeTypeName = de.julielab.jcore.types.Person

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Number
elementType = NULL
multipleReferencesAllowed = NULL
name = number
rangeTypeName = de.julielab.jcore.types.Number

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Voice
elementType = NULL
multipleReferencesAllowed = NULL
name = voice
rangeTypeName = de.julielab.jcore.types.Voice

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Aspect
elementType = NULL
multipleReferencesAllowed = NULL
name = aspect
rangeTypeName = de.julielab.jcore.types.Aspect

}

name = de.julielab.jcore.types.VerbFeats
supertypeName = de.julielab.jcore.types.GrammaticalFeats

41: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Describes a word structure, default grammatical features of a adjective
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Degree
elementType = NULL
multipleReferencesAllowed = NULL
name = degree
rangeTypeName = de.julielab.jcore.types.Degree

}

name = de.julielab.jcore.types.AdjectiveFeats
supertypeName = de.julielab.jcore.types.GrammaticalFeats

42: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Describes a word structure, default grammatical features of  pronouns
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Gender
elementType = NULL
multipleReferencesAllowed = NULL
name = gender
rangeTypeName = de.julielab.jcore.types.Gender

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Case
elementType = NULL
multipleReferencesAllowed = NULL
name = case
rangeTypeName = de.julielab.jcore.types.Case

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Number
elementType = NULL
multipleReferencesAllowed = NULL
name = number
rangeTypeName = de.julielab.jcore.types.Number

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Person
elementType = NULL
multipleReferencesAllowed = NULL
name = person
rangeTypeName = de.julielab.jcore.types.Person

}

name = de.julielab.jcore.types.PronounFeats
supertypeName = de.julielab.jcore.types.GrammaticalFeats

43: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = masculine

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = feminine

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = neutrum

}

description = 
features = Array{}

name = de.julielab.jcore.types.Gender
supertypeName = uima.cas.String

44: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = common

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = genitive

}

description = 
features = Array{}

name = de.julielab.jcore.types.Case
supertypeName = uima.cas.String

45: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = singular

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = plural

}

description = 
features = Array{}

name = de.julielab.jcore.types.Number
supertypeName = uima.cas.String

46: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = present

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = past

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = future

}

description = 
features = Array{}

name = de.julielab.jcore.types.Tense
supertypeName = uima.cas.String

47: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = 1

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = 2

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = 3

}

description = 
features = Array{}

name = de.julielab.jcore.types.Person
supertypeName = uima.cas.String

48: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = passive

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = active

}

description = 
features = Array{}

name = de.julielab.jcore.types.Voice
supertypeName = uima.cas.String

49: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = perfective

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = progressive

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = perfective_progressive

}

description = 
features = Array{}

name = de.julielab.jcore.types.Aspect
supertypeName = uima.cas.String

50: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = positive

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = comparative

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = superlative

}

description = 
features = Array{}

name = de.julielab.jcore.types.Degree
supertypeName = uima.cas.String

51: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = Every character is a lowercase letter: token
string = lowercase

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = Every character is an uppercase letter: TOKEN
string = uppercase

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = The first character is an uppercase letter; all other characters are lowercase letters: Token
string = capitalized

3: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = There is more than one uppercase letter in the token: ToKEn
string = multicaps

4: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = The token is a single uppercase letter: T
string = initcaps

5: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = with one or more hyphens: token-token
string = hyphenated

6: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = The token contains  dots: T.O.K.E.N.
string = dotted

7: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = The token is a single uppercase letter followed by a dot: T.
string = initdot

8: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = e.g. p53
string = alphanumeric

9: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = The token is an arithmetic or algebraic operator
string = arithmetic

10: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = apostrophe

11: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = doublequote

12: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = e.g. 12345 or .678
string = number

13: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 123-456
string = numberrange

14: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = The token is an opening or closing bracket, brace, parenthesis
string = bracket

15: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = member of set [,.?!:;]
string = punct

16: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = space, tab, newline, carriage return
string = space

17: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = The token is any sequence of characters that does not match any of the above descriptions
string = other

}

description = As more than one value might apply to a token, there is a StringList that can be filled with all values that apply for this token.
features = Array{}

name = de.julielab.jcore.types.Orthography
supertypeName = uima.cas.String

52: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Results of the chunking (shallow Parsing (see Abney))
features = Array{}

name = de.julielab.jcore.types.Chunk
supertypeName = de.julielab.jcore.types.Annotation

53: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.ChunkNP
supertypeName = de.julielab.jcore.types.Chunk

54: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = This encodes a complex noun phrase (CNP) which is usually an extension of a ChunkNP (see, e.g., jcore-cnp-extractor-ae). A CNP is currently defined to be the top-modes noun phrase of a constituency parse tree (excluding some special phrases such as appositions and SBARs).
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = number of this complex NP in the given sentence
elementType = NULL
multipleReferencesAllowed = NULL
name = chunkID
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the number of the sentence in which this complex NP is
elementType = NULL
multipleReferencesAllowed = NULL
name = sentenceID
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.ChunkComplexNP
supertypeName = de.julielab.jcore.types.Annotation

55: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.ChunkVP
supertypeName = de.julielab.jcore.types.Chunk

56: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.ChunkPP
supertypeName = de.julielab.jcore.types.Chunk

57: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.ChunkADJP
supertypeName = de.julielab.jcore.types.Chunk

58: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.ChunkADVP
supertypeName = de.julielab.jcore.types.Chunk

59: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.ChunkLST
supertypeName = de.julielab.jcore.types.Chunk

60: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.ChunkSBAR
supertypeName = de.julielab.jcore.types.Chunk

61: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.ChunkCONJP
supertypeName = de.julielab.jcore.types.Chunk

62: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.ChunkPRT
supertypeName = de.julielab.jcore.types.Chunk

63: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = This type represents the span that some cue word like negation or hedging applies to.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The cue word or phrase the induces this scope.
elementType = NULL
multipleReferencesAllowed = NULL
name = cue
rangeTypeName = de.julielab.jcore.types.Annotation

}

name = de.julielab.jcore.types.Scope
supertypeName = de.julielab.jcore.types.Chunk

64: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Syntactic dependency relation annotation, see subtypes
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Head (Token) of the analyzed dependency relation, C
elementType = NULL
multipleReferencesAllowed = NULL
name = head
rangeTypeName = de.julielab.jcore.types.Token

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The dependency relations can be projective or not, C
elementType = NULL
multipleReferencesAllowed = NULL
name = projective
rangeTypeName = uima.cas.Boolean

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The label of the relation (e.g. SBJ, OBJ, DEP)
elementType = NULL
multipleReferencesAllowed = NULL
name = label
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.DependencyRelation
supertypeName = de.julielab.jcore.types.Annotation

65: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = The super-type for the constituent annotation, see subtypes
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The parent in a constituency tree, C
elementType = NULL
multipleReferencesAllowed = NULL
name = parent
rangeTypeName = de.julielab.jcore.types.Constituent

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The head can be extracted with head rules, O
elementType = NULL
multipleReferencesAllowed = NULL
name = head
rangeTypeName = de.julielab.jcore.types.Token

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The category of the constituent (e.g. NP, VP)
elementType = NULL
multipleReferencesAllowed = NULL
name = cat
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.Constituent
supertypeName = de.julielab.jcore.types.Annotation

66: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Penn Treebank constituent annotation (see Penn Treebank)
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Form/function discrepancies, O
elementType = NULL
multipleReferencesAllowed = NULL
name = formFuncDisc
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Grammatical role, O
elementType = NULL
multipleReferencesAllowed = NULL
name = gramRole
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Adverbials are generally VP adjuncts.
elementType = NULL
multipleReferencesAllowed = NULL
name = adv
rangeTypeName = uima.cas.String

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Miscellaneous
elementType = NULL
multipleReferencesAllowed = NULL
name = misc
rangeTypeName = uima.cas.String

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = nullElement
rangeTypeName = uima.cas.String

5: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Th reference from the null constituent to the corresponding lexicalized constituent, O
elementType = NULL
multipleReferencesAllowed = NULL
name = ref
rangeTypeName = de.julielab.jcore.types.Constituent

6: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = In the case of gapping the reference to the corresponding constituent, O
elementType = NULL
multipleReferencesAllowed = NULL
name = map
rangeTypeName = de.julielab.jcore.types.Constituent

7: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Marks elements that appear before the subject in a declarative sentence, O
elementType = NULL
multipleReferencesAllowed = NULL
name = tpc
rangeTypeName = uima.cas.Boolean

}

name = de.julielab.jcore.types.PTBConstituent
supertypeName = de.julielab.jcore.types.Constituent

67: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Ohta, Tomoko, Yuka Tateisi, Hideki Mima and Jun'ichi Tsujii. (2002). GENIA Corpus: an Annotated Research Abstract Corpus in Molecular Biology Domain. In the Proceedings of he Human Language Technology Conference (HLT 2002). pp73--77.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Marks coordinations, O
elementType = NULL
multipleReferencesAllowed = NULL
name = syn
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.GENIAConstituent
supertypeName = de.julielab.jcore.types.PTBConstituent

68: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Mark A. Mandel. Integrated Annotation of Biomedical Text: Creating the PennBioIE Corpus. March 2006. Text Mining, Ontologies and Natural Language Processing in Biomedicine.
features = Array{}

name = de.julielab.jcore.types.PennBioIEConstituent
supertypeName = de.julielab.jcore.types.PTBConstituent

69: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = resolved
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = elliptical
rangeTypeName = uima.cas.Boolean

}

name = de.julielab.jcore.types.Coordination
supertypeName = de.julielab.jcore.types.Annotation

70: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.EEE
supertypeName = de.julielab.jcore.types.Coordination

71: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = cat
rangeTypeName = de.julielab.jcore.types.CoordinationElement_Value

}

name = de.julielab.jcore.types.CoordinationElement
supertypeName = de.julielab.jcore.types.Annotation

72: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = conjunct

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = conjunction

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = antecedent

}

description = 
features = Array{}

name = de.julielab.jcore.types.CoordinationElement_Value
supertypeName = uima.cas.String

73: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = This annotation marks the span of a sentence.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = segment
rangeTypeName = de.julielab.jcore.types.Segment

}

name = de.julielab.jcore.types.Sentence
supertypeName = de.julielab.jcore.types.Annotation

74: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.PrunedDependencyRelation
supertypeName = de.julielab.jcore.types.DependencyRelation

75: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.PrimaryDependencyRelation
supertypeName = de.julielab.jcore.types.DependencyRelation

76: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = This annotation type represents the text reference to an abbreviation.
features = Array{}

name = de.julielab.jcore.types.AbbreviationLongform
supertypeName = de.julielab.jcore.types.Annotation

77: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = A paragraph is a self-contained unit of discourse in a written text dealing with a particular point or idea.
features = Array{}

name = de.julielab.jcore.types.Paragraph
supertypeName = de.julielab.jcore.types.Zone

78: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = a section is a part of the text that often has a heading, an id, a section type, figures, tables, citations and footnotes that occur in this section
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the title of the section
elementType = NULL
multipleReferencesAllowed = NULL
name = sectionHeading
rangeTypeName = de.julielab.jcore.types.Title

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the type of the section (e.g. results)
elementType = NULL
multipleReferencesAllowed = NULL
name = sectionType
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the text objects (figure, table, boxed text etc.) that are associated with a particular section
elementType = de.julielab.jcore.types.TextObject
multipleReferencesAllowed = true
name = textObjects
rangeTypeName = uima.cas.FSArray

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the id of the section, for example as mentioned in the original file, or level of the section
elementType = NULL
multipleReferencesAllowed = NULL
name = sectionId
rangeTypeName = uima.cas.String

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = depth of the section, e.g. 0 -> section, 1 -> subsection, 2 -> sub-subsection, ...
elementType = NULL
multipleReferencesAllowed = NULL
name = depth
rangeTypeName = uima.cas.Integer

5: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The section label, if given. This might, for example, just be the section number.
elementType = NULL
multipleReferencesAllowed = NULL
name = label
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.Section
supertypeName = de.julielab.jcore.types.Zone

79: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = A Zone is a distinct division of text. It is an abstract Type and provides a parent type for sub-types which represent various kinds of text zones.
features = Array{}

name = de.julielab.jcore.types.Zone
supertypeName = de.julielab.jcore.types.Annotation

80: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Title annotates titles covering various text units, including the whole paper, sections and subsections.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The type of the title:
table: title of a table
figure: title of a figure
caption: title of a caption
footnote: title of a footnote
elementType = NULL
multipleReferencesAllowed = NULL
name = titleType
rangeTypeName = de.julielab.jcore.types.TitleType

}

name = de.julielab.jcore.types.Title
supertypeName = de.julielab.jcore.types.Zone

81: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = the caption of figures, tables etc.

feature captionTitle is a Title-Annotation of the title of the caption, if existent.

feature captionType is an Enumeration, stating to what type of entity the caption belongs, e.g. figure or table
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The title of a figure / table caption, if it exists
elementType = NULL
multipleReferencesAllowed = NULL
name = captionTitle
rangeTypeName = de.julielab.jcore.types.Title

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The type of entity, this caption belongs to, e.g. figure or table
elementType = NULL
multipleReferencesAllowed = NULL
name = captionType
rangeTypeName = de.julielab.jcore.types.CaptionType

}

name = de.julielab.jcore.types.Caption
supertypeName = de.julielab.jcore.types.Zone

82: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Object, on our case, are annotations such as figures, tables, boxed text etc.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = such as figure, table, boxed-text etc.
elementType = NULL
multipleReferencesAllowed = NULL
name = objectType
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the id of the object as found in the text
elementType = NULL
multipleReferencesAllowed = NULL
name = objectId
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the label of an object
elementType = NULL
multipleReferencesAllowed = NULL
name = objectLabel
rangeTypeName = uima.cas.String

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the caption that comes with the object
elementType = NULL
multipleReferencesAllowed = NULL
name = objectCaption
rangeTypeName = de.julielab.jcore.types.Caption

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The title annotation of the text object, if it exists. The title might correspond to the objectLabel (which is of type String and thus no annotation on its own).
elementType = NULL
multipleReferencesAllowed = NULL
name = objectTitle
rangeTypeName = de.julielab.jcore.types.Title

}

name = de.julielab.jcore.types.TextObject
supertypeName = de.julielab.jcore.types.Zone

83: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Annotation of the complete abstract.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = A List of all parts of a structured abstract. Empty, if the abstract consists of only one part and has no titles.
elementType = de.julielab.jcore.types.AbstractSection
multipleReferencesAllowed = NULL
name = structuredAbstractParts
rangeTypeName = uima.cas.FSArray

}

name = de.julielab.jcore.types.AbstractText
supertypeName = de.julielab.jcore.types.Zone

84: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Text-markup information (italic, bold etc.) on any (e.g. character) level. Allows to keep the original style markup of the text, several style types might be set to same (or overlapping) range, when different styles are set to the same text region.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the name of the style used.
elementType = NULL
multipleReferencesAllowed = NULL
name = styleName
rangeTypeName = de.julielab.jcore.types.StyleName

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the encoding used.
elementType = NULL
multipleReferencesAllowed = NULL
name = encoding
rangeTypeName = de.julielab.jcore.types.Encoding

}

name = de.julielab.jcore.types.Style
supertypeName = de.julielab.jcore.types.Annotation

85: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = slanted

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = italic

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = bold

3: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = underscore

4: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = stricke-though

}

description = 
features = Array{}

name = de.julielab.jcore.types.StyleName
supertypeName = uima.cas.String

86: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = UTF-8

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = UTF-16

}

description = Encoding Information
features = Array{}

name = de.julielab.jcore.types.Encoding
supertypeName = uima.cas.String

87: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = used for annotation of lists
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = contains items of the level 1. The items of the level 1 could contain further items of next level and so on in order to represent an iterative structure of list items.
elementType = de.julielab.jcore.types.ListItem
multipleReferencesAllowed = true
name = itemList
rangeTypeName = uima.cas.FSArray

}

name = de.julielab.jcore.types.List
supertypeName = de.julielab.jcore.types.Zone

88: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = item of a list
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = items of the next level (sub-items)
elementType = de.julielab.jcore.types.ListItem
multipleReferencesAllowed = true
name = itemList
rangeTypeName = uima.cas.FSArray

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Level of indentation of the list item.
elementType = NULL
multipleReferencesAllowed = NULL
name = level
rangeTypeName = uima.cas.Integer

}

name = de.julielab.jcore.types.ListItem
supertypeName = de.julielab.jcore.types.Zone

89: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Title of a text section in contrast to the title of the whole document.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = depth of the section, e.g. 0 -> section, 1 -> subsection, 2 -> sub-subsection, ...
elementType = NULL
multipleReferencesAllowed = NULL
name = depth
rangeTypeName = uima.cas.Integer

}

name = de.julielab.jcore.types.SectionTitle
supertypeName = de.julielab.jcore.types.Title

90: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Annotation for all elements in the CAS that belong to figures, e.g. figure title, figure caption etc.
features = Array{}

name = de.julielab.jcore.types.Figure
supertypeName = de.julielab.jcore.types.TextObject

91: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = An annotation for CAS elements that belong to a table, e.g. table title, table caption etc.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = An array collecting all footnotes, appearing in this table
elementType = de.julielab.jcore.types.Footnote
multipleReferencesAllowed = NULL
name = footnotes
rangeTypeName = uima.cas.FSArray

}

name = de.julielab.jcore.types.Table
supertypeName = de.julielab.jcore.types.TextObject

92: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Footnotes of all kinds, i.e. footnotes found in running text or in tables etc.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = footnoteTitle
rangeTypeName = de.julielab.jcore.types.Title

}

name = de.julielab.jcore.types.Footnote
supertypeName = de.julielab.jcore.types.Zone

93: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The title of a part of a structured abstract, e.g. "Background", "Methods", "Results", ...
elementType = NULL
multipleReferencesAllowed = NULL
name = abstractSectionHeading
rangeTypeName = de.julielab.jcore.types.Title

}

name = de.julielab.jcore.types.AbstractSection
supertypeName = de.julielab.jcore.types.Zone

94: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = The whole bibliography, beginning with a title like e.g. References or Literature and ending at the end of the last reference.
features = Array{}

name = de.julielab.jcore.types.Bibliography
supertypeName = de.julielab.jcore.types.Zone

95: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = table

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = figure

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = caption

3: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = footnote

4: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = Denotes the heading of a section of a structured abstract
string = abstractSection

5: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = Denotes the document title
string = document

6: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = other

7: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = section

}

description = The type of a title:
abstract: title of an abstract or abstract part
table: title of a table
figure: title of a figure
caption: title of a caption
footnote: title of a footnote
abstract: title of an abstract or abstract part
document: title of the document
features = Array{}

name = de.julielab.jcore.types.TitleType
supertypeName = uima.cas.String

96: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = table

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = figure

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = other

}

description = The type of entity the Caption belongs to, e.g. a figure or a table
features = Array{}

name = de.julielab.jcore.types.CaptionType
supertypeName = uima.cas.String

97: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = A segment is comparable to "de.julielab.jcore.types.Section" but for medical document (e.g. discharge summaries) we want a distinction between these types
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = SecTag reference??
elementType = NULL
multipleReferencesAllowed = NULL
name = value
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.Segment
supertypeName = de.julielab.jcore.types.Zone

98: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Used for document-internal references like literature references, footnotes etc.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The reference type: literature, figure, footnote etc.
elementType = NULL
multipleReferencesAllowed = NULL
name = reftype
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The ID of the referenced object.
elementType = NULL
multipleReferencesAllowed = NULL
name = refid
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.InternalReference
supertypeName = de.julielab.jcore.types.Annotation

99: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Biomedical Entity (e.g. gene, organism, cell type)
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The species this BioEntityMentions refers to, if known.
elementType = NULL
multipleReferencesAllowed = NULL
name = species
rangeTypeName = uima.cas.StringArray

}

name = de.julielab.jcore.types.BioEntityMention
supertypeName = de.julielab.jcore.types.EntityMention

100: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.Gene
supertypeName = de.julielab.jcore.types.BioEntityMention

101: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.GeneMutation
supertypeName = de.julielab.jcore.types.BioEntityMention

102: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.PointMutation
supertypeName = de.julielab.jcore.types.GeneMutation

103: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.MiRNA
supertypeName = de.julielab.jcore.types.BioEntityMention

104: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.Disease
supertypeName = de.julielab.jcore.types.BioEntityMention

105: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.Organism
supertypeName = de.julielab.jcore.types.BioEntityMention

106: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.UnspecifiedOrganism
supertypeName = de.julielab.jcore.types.Organism

107: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = attributes to an organism such as e.g. sex, developmental stage, transplantation type ...
features = Array{}

name = de.julielab.jcore.types.OrganismAttribute
supertypeName = de.julielab.jcore.types.BioEntityMention

108: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.BioEventMention
supertypeName = de.julielab.jcore.types.EventMention

109: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.BioRelationMention
supertypeName = de.julielab.jcore.types.RelationMention

110: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Chemical Entity
features = Array{}

name = de.julielab.jcore.types.Chemicals
supertypeName = de.julielab.jcore.types.BioEntityMention

111: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Cell Entity
features = Array{}

name = de.julielab.jcore.types.Cell
supertypeName = de.julielab.jcore.types.BioEntityMention

112: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Mesh Term
features = Array{}

name = de.julielab.jcore.types.MeshMention
supertypeName = de.julielab.jcore.types.BioEntityMention

113: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.Protein
supertypeName = de.julielab.jcore.types.BioEntityMention

114: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = created for the shared task, here we add the group
elementType = NULL
multipleReferencesAllowed = false
name = categories
rangeTypeName = uima.cas.StringArray

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = goID
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.GOMention
supertypeName = de.julielab.jcore.types.ConceptMention

115: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = A specific version of the resource entry for Gene entries.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The synonym for which this resource entry was chosen.
elementType = NULL
multipleReferencesAllowed = NULL
name = synonym
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The confidence that the textual found mention fits to the selected synonyms.
elementType = NULL
multipleReferencesAllowed = NULL
name = confidenceMention
rangeTypeName = uima.cas.Double

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Confidence that this resource entry is indeed semantically fitting to the context.
elementType = NULL
multipleReferencesAllowed = NULL
name = confidenceSemantic
rangeTypeName = uima.cas.Double

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The NCBI taxonomy ID of this gene.
elementType = NULL
multipleReferencesAllowed = NULL
name = taxonomyId
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.GeneResourceEntry
supertypeName = de.julielab.jcore.types.ResourceEntry

116: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.Enzyme
supertypeName = de.julielab.jcore.types.BioEntityMention

117: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = (Named) EntityMention (i.e. An entity is an object or set of objects in the world. Entitiy mentions may be refrenced in a text by their name, indicated by a common noun or noun phrase, or represented by a pronoun) annotation
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Head of an entity mention such as Northwest in the Northwest
elementType = NULL
multipleReferencesAllowed = NULL
name = head
rangeTypeName = de.julielab.jcore.types.Annotation

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = mention level such as PRO (many), NOM, NAM (see ACE)
elementType = NULL
multipleReferencesAllowed = NULL
name = mentionLevel
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Entry ids for the entity concatenated with the likelihood category associated with this entity (in this case the exact event/relation modified by the likelihood indicator in question is deemed to be underspecified).
elementType = NULL
multipleReferencesAllowed = NULL
name = entityString
rangeTypeName = uima.cas.StringArray

}

name = de.julielab.jcore.types.EntityMention
supertypeName = de.julielab.jcore.types.ConceptMention

118: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = A super type for all event mentions. Under this type, mentions for predicate-argument relations and eventive propositional relations are found. This terminology follows section 3.1 and more especially 3.1.3 of Ekaterina Buyko's dissertation "Event Extraction from Biomedical Texts Using
Trimmed Dependency Graphs" (http://www.db-thueringen.de/servlets/DerivateServlet/Derivate-26400/Diss2/thesis_buyko.pdf). The type system should completely follow the thesis' notion but does not due to historical reasons.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = tense
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = modality
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = de.julielab.jcore.types.ArgumentMention
multipleReferencesAllowed = true
name = arguments
rangeTypeName = uima.cas.FSArray

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = de.julielab.jcore.types.ArgumentMention
multipleReferencesAllowed = NULL
name = reorderedArguments
rangeTypeName = uima.cas.FSArray

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = polarity
rangeTypeName = uima.cas.String

5: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = used to make relations visible for LuCas
elementType = NULL
multipleReferencesAllowed = NULL
name = relationString
rangeTypeName = uima.cas.StringArray

}

name = de.julielab.jcore.types.GeneralEventMention
supertypeName = de.julielab.jcore.types.ConceptMention

119: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = Binary Relation between Entitiy Mentions. While quite generally called "Relation", this type is commonly used for dynamic, i.e. eventive, propositional relations such as the regulation between genes.
features = Array{}

name = de.julielab.jcore.types.RelationMention
supertypeName = de.julielab.jcore.types.GeneralEventMention

120: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = This type was introduced during the participation of the BioNLP Shared Task 2009 by Ekaterina Buyko. Therefore, it mainly satisfies the requirements of the event type of this challenge. This includes the use of an "event trigger" which is not necessary for all relation types. In practice, the type is used to capture predicate-argument relations (such as binding) as well as eventive propositional relations (such as phosphorylation or up- and down-regulation). The latter category also includes events where one of the event arguments is an event itself.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = genericity
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = trigger
rangeTypeName = de.julielab.jcore.types.EventTrigger

}

name = de.julielab.jcore.types.EventMention
supertypeName = de.julielab.jcore.types.GeneralEventMention

121: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Reference to the Annotation Object that acts as a argument here
elementType = NULL
multipleReferencesAllowed = NULL
name = ref
rangeTypeName = de.julielab.jcore.types.Annotation

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = the role of the argument
elementType = NULL
multipleReferencesAllowed = NULL
name = role
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = used to make relations visible for LuCas
elementType = NULL
multipleReferencesAllowed = NULL
name = relationString
rangeTypeName = uima.cas.StringArray

}

name = de.julielab.jcore.types.ArgumentMention
supertypeName = de.julielab.jcore.types.Annotation

122: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.Timex2Mention
supertypeName = de.julielab.jcore.types.ConceptMention

123: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = specificType
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The reference to the Concept, we use here the super type TOP in order to avoid the recursive dependencies between type systems
elementType = NULL
multipleReferencesAllowed = NULL
name = ref
rangeTypeName = uima.cas.TOP

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = de.julielab.jcore.types.ResourceEntry
multipleReferencesAllowed = true
name = resourceEntryList
rangeTypeName = uima.cas.FSArray

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = This feature provides the text of the annotated concept mention (e.g., entity mention). important for easily representing discontinious mentions such as 'T cell'  in th expression 'T and B cell'
elementType = NULL
multipleReferencesAllowed = NULL
name = textualRepresentation
rangeTypeName = uima.cas.String

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = likelihood
rangeTypeName = de.julielab.jcore.types.LikelihoodIndicator

}

name = de.julielab.jcore.types.ConceptMention
supertypeName = de.julielab.jcore.types.Annotation

124: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.ValueMention
supertypeName = de.julielab.jcore.types.ConceptMention

125: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = probability of this trigger to be an event or relation trigger
elementType = NULL
multipleReferencesAllowed = NULL
name = probability
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = specifity to be an event trigger, compare with using in other context
elementType = NULL
multipleReferencesAllowed = NULL
name = specifity
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = how important is this trigger for the event
elementType = NULL
multipleReferencesAllowed = NULL
name = importance
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.EventTrigger
supertypeName = de.julielab.jcore.types.ConceptMention

126: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = ontology class mention
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = ID of the corresponding ontology class
elementType = NULL
multipleReferencesAllowed = NULL
name = ontClassId
rangeTypeName = uima.cas.String

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = name or ID of the ontology the class comes from
elementType = NULL
multipleReferencesAllowed = NULL
name = sourceOntology
rangeTypeName = uima.cas.String

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Names or IDs of associated semantic types.
elementType = NULL
multipleReferencesAllowed = NULL
name = semanticTypes
rangeTypeName = uima.cas.StringArray

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = The preferred term associated with the corresponding ontology class.
elementType = NULL
multipleReferencesAllowed = NULL
name = preferredTerm
rangeTypeName = uima.cas.String

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = List of tokens the ontology class mention is comprised of.
elementType = de.julielab.jcore.types.Token
multipleReferencesAllowed = NULL
name = matchedTokens
rangeTypeName = uima.cas.FSArray

5: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = E.g. an ontology class label that was found to correspond to the mention (e.g. as result of a dictionary lookup).
elementType = NULL
multipleReferencesAllowed = NULL
name = matchedSourceTerm
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.OntClassMention
supertypeName = de.julielab.jcore.types.ConceptMention

127: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = domain
rangeTypeName = de.julielab.jcore.types.Annotation

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = range
rangeTypeName = de.julielab.jcore.types.Annotation

2: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = de.julielab.jcore.types.Annotation
multipleReferencesAllowed = NULL
name = domainList
rangeTypeName = uima.cas.FSArray

3: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = de.julielab.jcore.types.Annotation
multipleReferencesAllowed = NULL
name = rangeList
rangeTypeName = uima.cas.FSArray

4: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = name
rangeTypeName = uima.cas.String

5: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = ID of the ontology relation the relation mention refers to.
elementType = NULL
multipleReferencesAllowed = NULL
name = ontRelationId
rangeTypeName = uima.cas.String

6: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Ontology defining the relation to which the relation mention refers to.
elementType = NULL
multipleReferencesAllowed = NULL
name = sourceOntology
rangeTypeName = uima.cas.String

7: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = Textual representation of the ontology relation. Could be redundant to the covered text of the relation mention annotation.
elementType = NULL
multipleReferencesAllowed = NULL
name = textualRepresentation
rangeTypeName = uima.cas.String

}

name = de.julielab.jcore.types.OntRelationMention
supertypeName = de.julielab.jcore.types.Annotation

128: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = This type refers to the likelihood aspect of epistemic modality. The annotation marks epistemic modal expressions used to linguistically modify the likelihood of an event or of a relation that an entity might be in. The employed likelihood scale also includes negation (0% likelihood) and assertion (100% likelihood), the latter being the default case where no explicit likelihood modifier is present in the text.
features = Array{0: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = likelihood
rangeTypeName = de.julielab.jcore.types.Likelihood

1: org.apache.uima.resource.metadata.impl.FeatureDescription_impl: 
description = 
elementType = NULL
multipleReferencesAllowed = NULL
name = entityAndRelationString
rangeTypeName = uima.cas.StringArray

}

name = de.julielab.jcore.types.LikelihoodIndicator
supertypeName = de.julielab.jcore.types.Annotation

129: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{0: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = negation

1: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = low

2: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = moderate

3: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = high

4: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = assertion

5: org.apache.uima.resource.metadata.impl.AllowedValue_impl: 
description = 
string = investigation

}

description = 
features = Array{}

name = de.julielab.jcore.types.Likelihood
supertypeName = uima.cas.String

130: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.OntClassMentionAggregate
supertypeName = de.julielab.jcore.types.OntClassMention

131: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.OntClassMentionAggElement
supertypeName = de.julielab.jcore.types.OntClassMention

132: org.apache.uima.resource.metadata.impl.TypeDescription_impl: 
allowedValues = Array{}

description = 
features = Array{}

name = de.julielab.jcore.types.OntClassMentionSimple
supertypeName = de.julielab.jcore.types.OntClassMention

}

vendor = NULL
version = NULL

vendor = de.julielab.jcore.ae.annotationadder
version = 2.5.0-SNAPSHOT

primitive = true
resourceManagerConfiguration = org.apache.uima.resource.metadata.impl.ResourceManagerConfiguration_impl: 
description = NULL
externalResourceBindings = Array{0: org.apache.uima.resource.metadata.impl.ExternalResourceBinding_impl: 
key = AnnotationSource
resourceName = GRU 2018

}

externalResources = Array{0: org.apache.uima.resource.impl.ExternalResourceDescription_impl: 
description = 
implementationName = de.julielab.jcore.ae.annotationadder.annotationsources.InMemoryFileDocumentClassAnnotationProvider
name = GRU 2018
resourceSpecifier = org.apache.uima.resource.impl.ConfigurableDataResourceSpecifier_impl: 
metaData = org.apache.uima.resource.metadata.impl.ResourceMetaData_impl: 
UUID = NULL
configurationParameterDeclarations = org.apache.uima.resource.metadata.impl.ConfigurationParameterDeclarations_impl: 
commonParameters = Array{}

configurationGroups = Array{}

configurationParameters = Array{}

defaultGroupName = NULL
searchStrategy = NULL

configurationParameterSettings = org.apache.uima.resource.metadata.impl.ConfigurationParameterSettings_impl: 
parameterSettings = Array{}

settingsForGroups = {}

copyright = NULL
description = NULL
name = 
vendor = NULL
version = NULL

url = file:/var/data/data_corpora/SIGIR2019_classified_class/model2018_gru_out_class


}

import = NULL
imports = Array{}

name = NULL
vendor = NULL
version = NULL

sofaMappings = NULL
delegateAnalysisEngineSpecifiersWithImports = {}
)
	at java.base/java.util.stream.Collectors.duplicateKeyException(Collectors.java:133)
	at java.base/java.util.stream.Collectors.lambda$uniqKeysMapAccumulator$1(Collectors.java:180)
	at java.base/java.util.stream.ReduceOps$3ReducingSink.accept(ReduceOps.java:169)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1654)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at de.julielab.jcore.pipeline.builder.base.main.JCoReUIMAPipeline.setAaeDescriptors(JCoReUIMAPipeline.java:872)
	at de.julielab.jcore.pipeline.builder.base.main.JCoReUIMAPipeline.load(JCoReUIMAPipeline.java:846)
	at de.julielab.jcore.pipeline.builder.cli.main.PipelineBuilderCLI.main(PipelineBuilderCLI.java:51)
/home/faessler/.jcore-pipeline-builder/jcore-base/v2.5/componentlist.json
/home/faessler/.jcore-pipeline-builder/jcore-projects/v2.5/componentlist.json
/home/faessler/.jcore-pipeline-builder/manual/1.0/componentlist.json
Welcome to the JCoRe Pipeline Builder
This tool is supposed to help with the creation of UIMA workflows using components from the JCoRe repository. While the tool tries to be as transparent and helpful as possible, a basic understanding of UIMA, JCoRe and the individual JCoRe components is necessary. For help and pointers to the adequate documentation, please refer to the README of the pipeline modules at https://github.com/JULIELab/jcore-pipeline-modules
You are here: Index
16:35:46.534 [main] [31mWARN [0;39m d.j.j.p.b.cli.util.StatusPrinter - The description with name JCoRe Sentence Annotator does not have a UIMA descriptor set
16:35:46.534 [main] [31mWARN [0;39m d.j.j.p.b.cli.util.StatusPrinter - The description with name JCoRe Token Annotator does not have a UIMA descriptor set
16:35:46.534 [main] [31mWARN [0;39m d.j.j.p.b.cli.util.StatusPrinter - The description with name JCoRe AcronymAnnotator does not have a UIMA descriptor set
16:35:46.534 [main] [31mWARN [0;39m d.j.j.p.b.cli.util.StatusPrinter - The description with name JCoRe OpenNLP POS Tagger does not have a UIMA descriptor set
16:35:46.534 [main] [31mWARN [0;39m d.j.j.p.b.cli.util.StatusPrinter - The description with name BioLemmatizer does not have a UIMA descriptor set
16:35:46.534 [main] [31mWARN [0;39m d.j.j.p.b.cli.util.StatusPrinter - The description with name JCore LINNAEUS Species AE does not have a UIMA descriptor set
16:35:46.534 [main] [31mWARN [0;39m d.j.j.p.b.cli.util.StatusPrinter - The description with name JCoRe BANNER AE for Biomedical English does not have a UIMA descriptor set
16:35:46.535 [main] [31mWARN [0;39m d.j.j.p.b.cli.util.StatusPrinter - The description with name JCoRe Mutation Annotator does not have a UIMA descriptor set
16:35:46.535 [main] [31mWARN [0;39m d.j.j.p.b.cli.util.StatusPrinter - The description with name JCoRe Lingscope Negation AE does not have a UIMA descriptor set
16:35:46.535 [main] [31mWARN [0;39m d.j.j.p.b.cli.util.StatusPrinter - The description with name PM Classifier 2017 does not have a UIMA descriptor set
16:35:46.535 [main] [31mWARN [0;39m d.j.j.p.b.cli.util.StatusPrinter - The description with name PM Classifier 2018 does not have a UIMA descriptor set
16:35:46.535 [main] [31mWARN [0;39m d.j.j.p.b.cli.util.StatusPrinter - The description with name JCoRe Annotation Adder does not have a UIMA descriptor set
16:35:46.535 [main] [31mWARN [0;39m d.j.j.p.b.cli.util.StatusPrinter - The description with name JCoRe Annotation Adder 1 does not have a UIMA descriptor set
16:35:46.535 [main] [31mWARN [0;39m d.j.j.p.b.cli.util.StatusPrinter - The description with name JCoRe Annotation Adder 2 does not have a UIMA descriptor set
16:35:46.536 [main] [31mWARN [0;39m d.j.j.p.b.cli.util.StatusPrinter - The description with name JCoRe XMI Database Writer does not have a UIMA descriptor set
16:35:46.536 [main] [31mWARN [0;39m d.j.j.p.b.cli.util.StatusPrinter - The description with name JCoRe Database Checkpoint Writer does not have a UIMA descriptor set
16:35:46.537 [main] [31mWARN [0;39m d.j.j.p.b.cli.util.StatusPrinter - The description with name XMI Database Writer for BANNER Genes does not have a UIMA descriptor set
Collection Reader:
  - JCoRe XMI Database Multiplier Reader 1
    Maven artifact: de.julielab:jcore-xmi-db-reader:2.5.1-SNAPSHOT
    Mandatory Parameters:
    FetchIdsProactively: true
    Table: public.preprocessing_all
    CostosysConfigFile: ../costosys.xml
    ReadsBaseDocument: true
CAS Multipliers:
  - JCoRe Abstract Database Multiplier
    Maven artifact: de.julielab:jcore-xmi-db-reader:2.5.1-SNAPSHOT
Analysis Engines:
  - JCoRe Sentence Annotator
    Maven artifact: de.julielab:jcore-jsbd-ae-biomedical-english:2.5.0-SNAPSHOT
Cannot read configuration parameters because no descriptor has been loaded.
  - JCoRe Token Annotator
    Maven artifact: de.julielab:jcore-jtbd-ae-biomedical-english:2.5.0-SNAPSHOT
Cannot read configuration parameters because no descriptor has been loaded.
  - JCoRe AcronymAnnotator
    Maven artifact: de.julielab:jcore-acronym-ae:2.5.0-SNAPSHOT
Cannot read configuration parameters because no descriptor has been loaded.
  - JCoRe OpenNLP POS Tagger
    Maven artifact: de.julielab:jcore-opennlp-postag-ae-biomedical-english:2.5.0-SNAPSHOT
Cannot read configuration parameters because no descriptor has been loaded.
  - BioLemmatizer
    Maven artifact: de.julielab:jcore-biolemmatizer-ae:2.5.0-SNAPSHOT
Cannot read configuration parameters because no descriptor has been loaded.
  - JCore LINNAEUS Species AE
    Maven artifact: de.julielab:jcore-linnaeus-species-ae-genera-species-proxies-dicts:2.5.0-SNAPSHOT
Cannot read configuration parameters because no descriptor has been loaded.
  - JCoRe BANNER AE for Biomedical English (DEACTIVATED)
    Maven artifact: de.julielab:jcore-banner-ae-biomedical-english:2.5.0-SNAPSHOT
Cannot read configuration parameters because no descriptor has been loaded.
  - JCoRe Mutation Annotator
    Maven artifact: de.julielab:jcore-mutationfinder-ae:2.5.0-SNAPSHOT
Cannot read configuration parameters because no descriptor has been loaded.
  - JCoRe Lingscope Negation AE
    Maven artifact: de.julielab:jcore-lingscope-negation-ae:2.5.0-SNAPSHOT
Cannot read configuration parameters because no descriptor has been loaded.
  - PM Classifier 2017 (DEACTIVATED)
    Maven artifact: de.julielab:jcore-pmclassifier-ae:2.5.0-SNAPSHOT
Cannot read configuration parameters because no descriptor has been loaded.
  - PM Classifier 2018 (DEACTIVATED)
    Maven artifact: de.julielab:jcore-pmclassifier-ae:2.5.0-SNAPSHOT
Cannot read configuration parameters because no descriptor has been loaded.
  - JCoRe Annotation Adder (DEACTIVATED)
    Maven artifact: de.julielab:jcore-annotation-adder-ae:2.5.0-SNAPSHOT
Cannot read configuration parameters because no descriptor has been loaded.
  - JCoRe Annotation Adder 1 (DEACTIVATED)
    Maven artifact: de.julielab:jcore-annotation-adder-ae:2.5.0-SNAPSHOT
Cannot read configuration parameters because no descriptor has been loaded.
  - JCoRe Annotation Adder 2
    Maven artifact: de.julielab:jcore-annotation-adder-ae:2.5.0-SNAPSHOT
Cannot read configuration parameters because no descriptor has been loaded.
CAS Consumers:
  - JCoRe XMI Database Writer
    Maven artifact: de.julielab:jcore-xmi-db-writer:2.5.1-SNAPSHOT
Cannot read configuration parameters because no descriptor has been loaded.
  - JCoRe Database Checkpoint Writer
    Maven artifact: de.julielab:jcore-db-checkpoint-ae:2.5.1-SNAPSHOT
Cannot read configuration parameters because no descriptor has been loaded.
  - XMI Database Writer for BANNER Genes (DEACTIVATED)
    Maven artifact: de.julielab:jcore-xmi-db-writer:2.5.1-SNAPSHOT
Cannot read configuration parameters because no descriptor has been loaded.

Add or remove components from your pipeline.
   1: Collection Reader
   2: CAS Multiplier
   3: Analysis Engine
   4: CAS Consumer
   5: Configure Pipeline
   6: Save Pipeline
   7: Load Pipeline
   8: Specify Pipeline Status Verbosity
   9: Manage Component Repositories
  10: Refresh Component Repository
  11: Set pipeline components parent POM
  12: Write a Maven POM for debugging
  13: Quit
Enter your choice: 